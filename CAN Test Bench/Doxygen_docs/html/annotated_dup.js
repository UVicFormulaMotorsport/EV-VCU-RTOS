var annotated_dup =
[
    [ "access_control_info", "unionaccess__control__info.html", "unionaccess__control__info" ],
    [ "bms_settings_t", "structbms__settings__t.html", "structbms__settings__t" ],
    [ "CAN_Callback", "struct_c_a_n___callback.html", "struct_c_a_n___callback" ],
    [ "daq_child_task", "structdaq__child__task.html", "structdaq__child__task" ],
    [ "daq_datapoint", "structdaq__datapoint.html", "structdaq__datapoint" ],
    [ "daq_loop_args", "structdaq__loop__args.html", "structdaq__loop__args" ],
    [ "daq_param_list_node", "structdaq__param__list__node.html", "structdaq__param__list__node" ],
    [ "driving_loop_args", "structdriving__loop__args.html", "structdriving__loop__args" ],
    [ "drivingLoopArgs", "structdriving_loop_args.html", null ],
    [ "drivingMode", "structdriving_mode.html", "structdriving_mode" ],
    [ "drivingModeParams", "uniondriving_mode_params.html", null ],
    [ "exp_torque_map_args", "structexp__torque__map__args.html", "structexp__torque__map__args" ],
    [ "helper_task_args", "unionhelper__task__args.html", "unionhelper__task__args" ],
    [ "linear_torque_map_args", "structlinear__torque__map__args.html", "structlinear__torque__map__args" ],
    [ "motor_controller_settings", "structmotor__controller__settings.html", "structmotor__controller__settings" ],
    [ "p_status", "structp__status.html", "structp__status" ],
    [ "rbnode", "structrbnode.html", "structrbnode" ],
    [ "rbtree", "structrbtree.html", "structrbtree" ],
    [ "s_curve_torque_map_args", "structs__curve__torque__map__args.html", "structs__curve__torque__map__args" ],
    [ "setting_helper_task", "structsetting__helper__task.html", "structsetting__helper__task" ],
    [ "state_change_daemon_args", "structstate__change__daemon__args.html", "structstate__change__daemon__args" ],
    [ "task_management_info", "structtask__management__info.html", "structtask__management__info" ],
    [ "task_status_block", "structtask__status__block.html", "structtask__status__block" ],
    [ "tx_all_settings_args", "structtx__all__settings__args.html", "structtx__all__settings__args" ],
    [ "tx_journal_args", "structtx__journal__args.html", "structtx__journal__args" ],
    [ "uv19_pdu_settings", "structuv19__pdu__settings.html", "structuv19__pdu__settings" ],
    [ "uv_binary_semaphore_info", "structuv__binary__semaphore__info.html", "structuv__binary__semaphore__info" ],
    [ "uv_CAN_msg", "structuv___c_a_n__msg.html", "structuv___c_a_n__msg" ],
    [ "uv_imd_settings", "structuv__imd__settings.html", "structuv__imd__settings" ],
    [ "uv_init_struct", "structuv__init__struct.html", "structuv__init__struct" ],
    [ "uv_init_task_args", "structuv__init__task__args.html", "structuv__init__task__args" ],
    [ "uv_init_task_response", "structuv__init__task__response.html", "structuv__init__task__response" ],
    [ "uv_internal_params", "structuv__internal__params.html", "structuv__internal__params" ],
    [ "uv_mutex_info", "structuv__mutex__info.html", "structuv__mutex__info" ],
    [ "uv_os_settings", "structuv__os__settings.html", "structuv__os__settings" ],
    [ "uv_persistant_data_frame", "structuv__persistant__data__frame.html", "structuv__persistant__data__frame" ],
    [ "uv_scd_response", "structuv__scd__response.html", "structuv__scd__response" ],
    [ "uv_semaphore_info", "structuv__semaphore__info.html", "structuv__semaphore__info" ],
    [ "uv_task_info", "structuv__task__info.html", "structuv__task__info" ],
    [ "uv_task_msg_t", "structuv__task__msg__t.html", "structuv__task__msg__t" ],
    [ "uv_vehicle_settings", "structuv__vehicle__settings.html", "structuv__vehicle__settings" ],
    [ "veh_gen_info", "structveh__gen__info.html", "structveh__gen__info" ]
];