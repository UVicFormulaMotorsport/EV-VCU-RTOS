<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="motor__controller_8c" kind="file" language="C++">
    <compoundname>motor_controller.c</compoundname>
    <includes refid="motor__controller_8h" local="yes">motor_controller.h</includes>
    <includes refid="can_8h" local="yes">can.h</includes>
    <includes local="yes">cmsis_os.h</includes>
    <includes refid="uvfr__utils_8h" local="yes">uvfr_utils.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="13">
        <label>tim.h</label>
        <link refid="tim_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>imd.h</label>
        <link refid="imd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>dash.h</label>
        <link refid="dash_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>driving_loop.h</label>
        <link refid="driving__loop_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>temp_monitoring.h</label>
        <link refid="temp__monitoring_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>stdint.h</label>
      </node>
      <node id="33">
        <label>stdlib.h</label>
      </node>
      <node id="28">
        <label>oled.h</label>
        <link refid="oled_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>adc.h</label>
        <link refid="adc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cmsis_os.h</label>
      </node>
      <node id="6">
        <label>uvfr_utils.h</label>
        <link refid="uvfr__utils_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>message_buffer.h</label>
      </node>
      <node id="23">
        <label>bms.h</label>
        <link refid="bms_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Core/Src/motor_controller.c</label>
        <link refid="motor__controller_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>spi.h</label>
        <link refid="spi_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>pdu.h</label>
        <link refid="pdu_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>motor_controller.h</label>
        <link refid="motor__controller_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>string.h</label>
      </node>
      <node id="19">
        <label>uvfr_settings.h</label>
        <link refid="uvfr__settings_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>daq.h</label>
        <link refid="daq_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>gpio.h</label>
        <link refid="gpio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>rb_tree.h</label>
        <link refid="rb__tree_8h"/>
      </node>
      <node id="11">
        <label>constants.h</label>
        <link refid="constants_8h"/>
      </node>
      <node id="10">
        <label>can.h</label>
        <link refid="can_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>uvfr_global_config.h</label>
        <link refid="uvfr__global__config_8h"/>
      </node>
      <node id="31">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
      </node>
      <node id="24">
        <label>uvfr_state_engine.h</label>
        <link refid="uvfr__state__engine_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>odometer.h</label>
        <link refid="odometer_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stm32f4xx_hal.h</label>
      </node>
      <node id="35">
        <label>stdio.h</label>
      </node>
      <node id="16">
        <label>FreeRTOS.h</label>
      </node>
      <node id="12">
        <label>dma.h</label>
        <link refid="dma_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>task.h</label>
      </node>
      <node id="3">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="motor__controller_8c_1afb41a96439ba6d63dcc64f257c43a1d2" prot="public" static="no" mutable="no">
        <type><ref refid="structmotor__controller__settings" kindref="compound">motor_controller_settings</ref></type>
        <definition>motor_controller_settings mc_default_settings</definition>
        <argsstring></argsstring>
        <name>mc_default_settings</name>
        <initializer>= {
    .can_id_tx              = 0x201,
    .can_id_rx              = 0x181,
    .mc_CAN_timeout         = 2,
    .<ref refid="motor__controller_8h_1a3f03fa29b56b9f1f2cf0a36f989f9521a2b83ac91fbacf438199c4515ae3dcb88" kindref="member">proportional_gain</ref>      = 10,   
    .<ref refid="motor__controller_8h_1a3f03fa29b56b9f1f2cf0a36f989f9521a39318ae4bc4582c26c32b7748f64c8d4" kindref="member">integral_time_constant</ref> = 400,  
    .<ref refid="motor__controller_8h_1a3f03fa29b56b9f1f2cf0a36f989f9521aa1022b52e56d3a918c7a62177a88bb9e" kindref="member">integral_memory_max</ref>    = 60    
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="14" column="27" bodyfile="Core/Src/motor_controller.c" bodystart="14" bodyend="-1"/>
        <referencedby refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" compoundref="motor__controller_8c" startline="63" endline="78">MC_Request_Data</referencedby>
        <referencedby refid="motor__controller_8c_1a37f4a694fab82b650c96c13fe4894143" compoundref="motor__controller_8c" startline="80" endline="96">MC_Set_Param</referencedby>
        <referencedby refid="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" compoundref="motor__controller_8c" startline="278" endline="326">MC_Startup</referencedby>
        <referencedby refid="motor__controller_8c_1ad9944bce211ed6594929c3acf72e3881" compoundref="motor__controller_8c" startline="30" endline="56">MotorControllerSpinTest</referencedby>
        <referencedby refid="motor__controller_8c_1a98ef1edcc51198faf53767e8d92ce4c9" compoundref="motor__controller_8c" startline="104" endline="137">Parse_Bamocar_Response</referencedby>
        <referencedby refid="uvfr__settings_8c_1add1ebdaa7f93f2a43ca6afc6e05fdd44" compoundref="uvfr__settings_8c" startline="232" endline="255">setupDefaultSettings</referencedby>
        <referencedby refid="uvfr__settings_8c_1a5f5ab3b99bc259455a2ec79144422450" compoundref="uvfr__settings_8c" startline="1057" endline="1138">uvResetFlashToDefault</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="motor__controller_8c_1ad9944bce211ed6594929c3acf72e3881" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t MotorControllerSpinTest</definition>
        <argsstring>(float T_filtered)</argsstring>
        <name>MotorControllerSpinTest</name>
        <param>
          <type>float</type>
          <declname>T_filtered</declname>
        </param>
        <briefdescription>
<para>Sends a direct torque command to the motor controller. </para>
        </briefdescription>
        <detaileddescription>
<para>This function accepts a float for the desired torque (T_filtered), clamps it between 0 and 100, converts it to a 16-bit integer, and then sends it over CAN using uvSendCanMSG. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="30" column="10" bodyfile="Core/Src/motor_controller.c" bodystart="30" bodyend="56"/>
        <references refid="structmotor__controller__settings_1a810e13f814f738ffbde7b0bd18706958" compoundref="uvfr__settings_8h" startline="163">motor_controller_settings::can_id_tx</references>
        <references refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" compoundref="uvfr__utils_8h" startline="277">uv_CAN_msg::data</references>
        <references refid="structuv___c_a_n__msg_1aa74af3745c8b56910d7c309245541d37" compoundref="uvfr__utils_8h" startline="275">uv_CAN_msg::dlc</references>
        <references refid="structuv___c_a_n__msg_1a3a3fdc7fed06a631fefa58ea44052d8d" compoundref="uvfr__utils_8h" startline="271">uv_CAN_msg::flags</references>
        <references refid="motor__controller_8c_1afb41a96439ba6d63dcc64f257c43a1d2" compoundref="motor__controller_8c" startline="14">mc_default_settings</references>
        <references refid="structuv___c_a_n__msg_1aae369fbabe3cc5b71a89bb641c24aace" compoundref="uvfr__utils_8h" startline="276">uv_CAN_msg::msg_id</references>
        <references refid="motor__controller_8h_1a8cab19f0549eb777404ec1c7a3b56268aa53daf1b53f678af8159cba9238c5e6f" compoundref="motor__controller_8h" startline="24">N_set</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" compoundref="uvfr__utils_8h" startline="167">UV_OK</references>
        <references refid="group__uvfr__can__api_1ga62414944c3b631f57fdd08e467bcf5a4" compoundref="can_8c" startline="513" endline="554">uvSendCanMSG</references>
        <referencedby refid="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" compoundref="motor__controller_8c" startline="278" endline="326">MC_Startup</referencedby>
        <referencedby refid="driving__loop_8c_1a1eee9dfaef3aaaf010bd8bb12fa20fc3" compoundref="driving__loop_8c" startline="182" endline="185">sendTorqueToMotorController</referencedby>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MC_Request_Data</definition>
        <argsstring>(uint8_t RegID)</argsstring>
        <name>MC_Request_Data</name>
        <param>
          <type>uint8_t</type>
          <declname>RegID</declname>
        </param>
        <briefdescription>
<para>Sends a CAN request to retrieve a specific register from the motor controller. </para>
        </briefdescription>
        <detaileddescription>
<para>The request message is formatted as: [0x3D, RegID, 0], which should trigger an immediate reply. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="63" column="6" bodyfile="Core/Src/motor_controller.c" bodystart="63" bodyend="78"/>
        <references refid="structmotor__controller__settings_1a810e13f814f738ffbde7b0bd18706958" compoundref="uvfr__settings_8h" startline="163">motor_controller_settings::can_id_tx</references>
        <references refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" compoundref="uvfr__utils_8h" startline="277">uv_CAN_msg::data</references>
        <references refid="structuv___c_a_n__msg_1aa74af3745c8b56910d7c309245541d37" compoundref="uvfr__utils_8h" startline="275">uv_CAN_msg::dlc</references>
        <references refid="structuv___c_a_n__msg_1a3a3fdc7fed06a631fefa58ea44052d8d" compoundref="uvfr__utils_8h" startline="271">uv_CAN_msg::flags</references>
        <references refid="motor__controller_8c_1afb41a96439ba6d63dcc64f257c43a1d2" compoundref="motor__controller_8c" startline="14">mc_default_settings</references>
        <references refid="structuv___c_a_n__msg_1aae369fbabe3cc5b71a89bb641c24aace" compoundref="uvfr__utils_8h" startline="276">uv_CAN_msg::msg_id</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" compoundref="uvfr__utils_8h" startline="167">UV_OK</references>
        <references refid="group__uvfr__can__api_1ga62414944c3b631f57fdd08e467bcf5a4" compoundref="can_8c" startline="513" endline="554">uvSendCanMSG</references>
        <referencedby refid="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" compoundref="motor__controller_8c" startline="278" endline="326">MC_Startup</referencedby>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1a37f4a694fab82b650c96c13fe4894143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref></type>
        <definition>uv_status MC_Set_Param</definition>
        <argsstring>(uint8_t RegID, uint16_t d)</argsstring>
        <name>MC_Set_Param</name>
        <param>
          <type>uint8_t</type>
          <declname>RegID</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="80" column="11" bodyfile="Core/Src/motor_controller.c" bodystart="80" bodyend="96"/>
        <references refid="structmotor__controller__settings_1a810e13f814f738ffbde7b0bd18706958" compoundref="uvfr__settings_8h" startline="163">motor_controller_settings::can_id_tx</references>
        <references refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" compoundref="uvfr__utils_8h" startline="277">uv_CAN_msg::data</references>
        <references refid="structuv___c_a_n__msg_1aa74af3745c8b56910d7c309245541d37" compoundref="uvfr__utils_8h" startline="275">uv_CAN_msg::dlc</references>
        <references refid="motor__controller_8c_1afb41a96439ba6d63dcc64f257c43a1d2" compoundref="motor__controller_8c" startline="14">mc_default_settings</references>
        <references refid="structuv___c_a_n__msg_1aae369fbabe3cc5b71a89bb641c24aace" compoundref="uvfr__utils_8h" startline="276">uv_CAN_msg::msg_id</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea480ef4e56d17703f0629bfe1e06bc4f0" compoundref="uvfr__utils_8h" startline="169">UV_ERROR</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" compoundref="uvfr__utils_8h" startline="167">UV_OK</references>
        <references refid="group__uvfr__can__api_1ga62414944c3b631f57fdd08e467bcf5a4" compoundref="can_8c" startline="513" endline="554">uvSendCanMSG</references>
        <referencedby refid="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" compoundref="motor__controller_8c" startline="278" endline="326">MC_Startup</referencedby>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1a98ef1edcc51198faf53767e8d92ce4c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Parse_Bamocar_Response</definition>
        <argsstring>(uv_CAN_msg *msg)</argsstring>
        <name>Parse_Bamocar_Response</name>
        <param>
          <type><ref refid="structuv___c_a_n__msg" kindref="compound">uv_CAN_msg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Parses a 32-bit value from a CAN message in little-endian format. </para>
        </briefdescription>
        <detaileddescription>
<para>This example assumes that the data bytes are stored as: data[0] = LSB, data[3] = MSB. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="104" column="6" bodyfile="Core/Src/motor_controller.c" bodystart="104" bodyend="137"/>
        <references refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" compoundref="uvfr__utils_8h" startline="277">uv_CAN_msg::data</references>
        <references refid="group__utility__macros_1ga829f8b8ab166c6d07df7023ee0b68300" compoundref="uvfr__utils_8h" startline="79">deserializeSmallE16</references>
        <references refid="structuv___c_a_n__msg_1aa74af3745c8b56910d7c309245541d37" compoundref="uvfr__utils_8h" startline="275">uv_CAN_msg::dlc</references>
        <references refid="motor__controller_8c_1afb41a96439ba6d63dcc64f257c43a1d2" compoundref="motor__controller_8c" startline="14">mc_default_settings</references>
        <references refid="structmotor__controller__settings_1af64381c50076a7d79844fef4ccf7d616" compoundref="uvfr__settings_8h" startline="170">motor_controller_settings::proportional_gain</references>
        <referencedby refid="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" compoundref="motor__controller_8c" startline="278" endline="326">MC_Startup</referencedby>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1aa2fe2c9102e9f2ab65ab4a9d5557f497" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void MotorControllerErrorHandler_16bitLE</definition>
        <argsstring>(uint8_t *data, uint8_t length)</argsstring>
        <name>MotorControllerErrorHandler_16bitLE</name>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Helper function to process a 16-bit error/warning field (little-endian). </para>
        </briefdescription>
        <detaileddescription>
<para>It expects the error data in 2 bytes where: data[0] = LSB, data[1] = MSB. It checks the error flags and calls uvPanic for critical errors. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="146" column="13" bodyfile="Core/Src/motor_controller.c" bodystart="146" bodyend="202"/>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa0dbc9540bf7a4c67b6a2810985bfb55d" compoundref="motor__controller_8h" startline="102">AC_current_offset_fault</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa150953c78b7fcc8ae97a50a5b5765264" compoundref="motor__controller_8h" startline="104">bleed_resistor_overload</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa425430d2585733363b6043ed70ebd7ab" compoundref="motor__controller_8h" startline="90">CAN_timeout_error</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa29aa452fe3c693b96c17c09849ee1633" compoundref="motor__controller_8h" startline="98">critical_AC_current</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa0dd2c6834f96df064d7b152074a9f81f" compoundref="motor__controller_8h" startline="100">ecode_timeout_error</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa87ada8cd125ba521b447d565c12bb30e" compoundref="motor__controller_8h" startline="87">eprom_read_error</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2a16f371b0570edeeb17214a398e4bfc" compoundref="motor__controller_8h" startline="91">feedback_signal_error</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffae9da794167969482cb67bfad83a04d71" compoundref="motor__controller_8h" startline="88">hardware_fault</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa54a5ca5981535fd231b00a1040622950" compoundref="motor__controller_8h" startline="94">IGBT_temp_max_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa18df3363e2a0048a813dcef5a41785ce" compoundref="motor__controller_8h" startline="103">internal_hardware_voltage_problem</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa229533ef674ddd4475b22e47eb506b49" compoundref="motor__controller_8h" startline="97">mains_voltage_max_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa13726d0d6fc8dd12135f4ea92d1dcc92" compoundref="motor__controller_8h" startline="92">mains_voltage_min_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2267f6ae60d8b9024ba418dd1f6d4b15" compoundref="motor__controller_8h" startline="93">motor_temp_max_limit</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa696b36face7279e19e2905b0fa9ecb68" compoundref="motor__controller_8h" startline="99">race_away_detected</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffadae8b5f4fb6cd6712202d055529499ef" compoundref="motor__controller_8h" startline="89">rotate_field_enable_not_present_run</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa357611869a1ec791b38a36ec2dfe09b9" compoundref="motor__controller_8h" startline="101">watchdog_reset</references>
        <referencedby refid="motor__controller_8c_1aaff68bb563bf4ad56841a5a5020cbadc" compoundref="motor__controller_8c" startline="211" endline="267">ProcessMotorControllerResponse</referencedby>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1aaff68bb563bf4ad56841a5a5020cbadc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ProcessMotorControllerResponse</definition>
        <argsstring>(uv_CAN_msg *msg)</argsstring>
        <name>ProcessMotorControllerResponse</name>
        <param>
          <type><ref refid="structuv___c_a_n__msg" kindref="compound">uv_CAN_msg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Processes a motor controller response received via CAN. </para>
        </briefdescription>
        <detaileddescription>
<para>This function examines the first byte as the register ID and then processes the rest of the message using little-endian parsing. For error/warning responses (for example, when reg_id equals motor_controller_errors_warnings), it calls the error handler. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="211" column="6" bodyfile="Core/Src/motor_controller.c" bodystart="211" bodyend="267"/>
        <references refid="motor__controller_8h_1aefe525453e2d5fb5ff19de9f98247c7ca08745ee38252c5952330efe1591df091" compoundref="motor__controller_8h" startline="38">CURRENT_ACTUAL</references>
        <references refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" compoundref="uvfr__utils_8h" startline="277">uv_CAN_msg::data</references>
        <references refid="structuv___c_a_n__msg_1aa74af3745c8b56910d7c309245541d37" compoundref="uvfr__utils_8h" startline="275">uv_CAN_msg::dlc</references>
        <references refid="motor__controller_8h_1a08f38539bd153ea7b7b1be8df1d6f6eda0065463d68046f7a361ad1b060548b27" compoundref="motor__controller_8h" startline="30">LOGIMAP_ERRORS</references>
        <references refid="motor__controller_8h_1a08f38539bd153ea7b7b1be8df1d6f6eda887c38d92ef273b6fae58dcb51931765" compoundref="motor__controller_8h" startline="31">LOGIMAP_IO</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa595211bb6640ca05c1c3344b47e2890f" compoundref="motor__controller_8h" startline="83">motor_controller_errors_warnings</references>
        <references refid="motor__controller_8c_1aa2fe2c9102e9f2ab65ab4a9d5557f497" compoundref="motor__controller_8c" startline="146" endline="202">MotorControllerErrorHandler_16bitLE</references>
        <references refid="motor__controller_8h_1a8cab19f0549eb777404ec1c7a3b56268a74ac68aa19b65409fa9b18b8f2be3bf4" compoundref="motor__controller_8h" startline="23">N_actual</references>
        <references refid="motor__controller_8h_1a08f38539bd153ea7b7b1be8df1d6f6eda75b5d9cefe36e570d9e0c306fb0e22fc" compoundref="motor__controller_8h" startline="32">POS_ACTUAL</references>
      </memberdef>
      <memberdef kind="function" id="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MC_Startup</definition>
        <argsstring>(void *args)</argsstring>
        <name>MC_Startup</name>
        <param>
          <type>void *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Initializes the motor controller. </para>
        </briefdescription>
        <detaileddescription>
<para>This routine performs the following steps:<orderedlist>
<listitem><para>Requests the serial number and firmware version.</para>
</listitem><listitem><para>Sends a nominal torque command (spin test).</para>
</listitem><listitem><para>Requests error/warning data.</para>
</listitem><listitem><para>Suspends itself after successful initialization. </para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/motor_controller.c" line="278" column="6" bodyfile="Core/Src/motor_controller.c" bodystart="278" bodyend="326"/>
        <references refid="structuv__init__task__response_1adfcb943d08344e528ad3d49c5c428918" compoundref="uvfr__utils_8h" startline="357">uv_init_task_response::device</references>
        <references refid="motor__controller_8h_1a829d1af845327949015b4e83bb6fc43d" compoundref="motor__controller_8h" startline="165">FIRMWARE_VERSION_REGISTER</references>
        <references refid="structuv__init__task__args_1adec47e7a54822cacfb8fcfc35a22157f" compoundref="uvfr__utils_8h" startline="331">uv_init_task_args::init_info_queue</references>
        <references refid="group__uvfr__can__api_1ga81adc4a577110ce8fe1158b0dc302cc2" compoundref="can_8c" startline="395" endline="447">insertCANMessageHandler</references>
        <references refid="motor__controller_8c_1afb41a96439ba6d63dcc64f257c43a1d2" compoundref="motor__controller_8c" startline="14">mc_default_settings</references>
        <references refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" compoundref="motor__controller_8c" startline="63" endline="78">MC_Request_Data</references>
        <references refid="motor__controller_8c_1a37f4a694fab82b650c96c13fe4894143" compoundref="motor__controller_8c" startline="80" endline="96">MC_Set_Param</references>
        <references refid="uvfr__utils_8h_1ad70cbc8929c4ad7a5901cd9eef5ca9b0a9c632ecb370b78547a390d1b5cf59671" compoundref="uvfr__utils_8h" startline="205">MOTOR_CONTROLLER</references>
        <references refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa595211bb6640ca05c1c3344b47e2890f" compoundref="motor__controller_8h" startline="83">motor_controller_errors_warnings</references>
        <references refid="motor__controller_8c_1ad9944bce211ed6594929c3acf72e3881" compoundref="motor__controller_8c" startline="30" endline="56">MotorControllerSpinTest</references>
        <references refid="motor__controller_8c_1a98ef1edcc51198faf53767e8d92ce4c9" compoundref="motor__controller_8c" startline="104" endline="137">Parse_Bamocar_Response</references>
        <references refid="structmotor__controller__settings_1af64381c50076a7d79844fef4ccf7d616" compoundref="uvfr__settings_8h" startline="170">motor_controller_settings::proportional_gain</references>
        <references refid="motor__controller_8h_1aab8c03dc3480e25a7a75b60edbf51cb3" compoundref="motor__controller_8h" startline="164">SERIAL_NUMBER_REGISTER</references>
        <references refid="structuv__init__task__response_1a56b3df74c10cdc59e8e1b9d4c1f36af7" compoundref="uvfr__utils_8h" startline="356">uv_init_task_response::status</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" compoundref="uvfr__utils_8h" startline="167">UV_OK</references>
        <referencedby refid="uvfr__utils_8c_1a6d40598f9d8daa89ca159a2e87f4fd01" compoundref="uvfr__utils_8c" startline="46" endline="253">uvInit</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>motor_controller.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="motor__controller_8h" kindref="compound">motor_controller.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="can_8h" kindref="compound">can.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>uvSendCanMSG,<sp/>uv_CAN_msg,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cmsis_os.h&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>vTaskSuspend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="uvfr__utils_8h" kindref="compound">uvfr_utils.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>uvPanic,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Global<sp/>default<sp/>settings<sp/>variable<sp/>defined<sp/>here.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>This<sp/>uses<sp/>the<sp/>motor_controller_settings<sp/>definition<sp/>from<sp/>uvfr_settings.h.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="uvfr__settings_8c_1a1c7fecf890841f27a4ca39fc66e8cc1b" refkind="member"><highlight class="normal"><ref refid="structmotor__controller__settings" kindref="compound">motor_controller_settings</ref><sp/><ref refid="motor__controller_8c_1afb41a96439ba6d63dcc64f257c43a1d2" kindref="member">mc_default_settings</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structmotor__controller__settings_1a810e13f814f738ffbde7b0bd18706958" kindref="member">can_id_tx</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x201,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>.can_id_rx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x181,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>.mc_CAN_timeout<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>.proportional_gain<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>10,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uint8_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>.integral_time_constant<sp/>=<sp/>400,<sp/><sp/></highlight><highlight class="comment">//<sp/>uint32_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>.integral_memory_max<sp/><sp/><sp/><sp/>=<sp/>60<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uint8_t<sp/>(represents<sp/>60%)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="motor__controller_8c_1ad9944bce211ed6594929c3acf72e3881" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="motor__controller_8c_1ad9944bce211ed6594929c3acf72e3881" kindref="member">MotorControllerSpinTest</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>T_filtered)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(T_filtered<sp/>&lt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_filtered<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(T_filtered<sp/>&gt;<sp/>100.0f)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_filtered<sp/>=<sp/>100.0f;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>torque_cmd<sp/>=<sp/>(uint16_t)<sp/>T_filtered;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structuv___c_a_n__msg" kindref="compound">uv_CAN_msg</ref><sp/>torque_msg;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;torque_msg,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(torque_msg));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>torque_msg.<ref refid="structuv___c_a_n__msg_1aae369fbabe3cc5b71a89bb641c24aace" kindref="member">msg_id</ref><sp/>=<sp/><ref refid="motor__controller_8c_1afb41a96439ba6d63dcc64f257c43a1d2" kindref="member">mc_default_settings</ref>.<ref refid="structmotor__controller__settings_1a810e13f814f738ffbde7b0bd18706958" kindref="member">can_id_tx</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>torque_msg.<ref refid="structuv___c_a_n__msg_1aa74af3745c8b56910d7c309245541d37" kindref="member">dlc</ref><sp/><sp/><sp/><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>N_set<sp/>command<sp/>(from<sp/>your<sp/>enum<sp/>motor_controller_speed_parameters)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>torque_msg.<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[0]<sp/>=<sp/><ref refid="motor__controller_8h_1a8cab19f0549eb777404ec1c7a3b56268aa53daf1b53f678af8159cba9238c5e6f" kindref="member">N_set</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Little-endian:<sp/>LSB<sp/>first<sp/>then<sp/>MSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>torque_msg.<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[1]<sp/>=<sp/>(uint8_t)(torque_cmd<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>torque_msg.<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[2]<sp/>=<sp/>(uint8_t)((torque_cmd<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>torque_msg.<ref refid="structuv___c_a_n__msg_1a3a3fdc7fed06a631fefa58ea44052d8d" kindref="member">flags</ref><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__uvfr__can__api_1ga62414944c3b631f57fdd08e467bcf5a4" kindref="member">uvSendCanMSG</ref>(&amp;torque_msg)<sp/>!=<sp/><ref refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" kindref="member">UV_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>send<sp/>torque<sp/>command&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" kindref="member">MC_Request_Data</ref>(uint8_t<sp/>RegID)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structuv___c_a_n__msg" kindref="compound">uv_CAN_msg</ref><sp/>request_msg;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;request_msg,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(request_msg));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>request_msg.<ref refid="structuv___c_a_n__msg_1aae369fbabe3cc5b71a89bb641c24aace" kindref="member">msg_id</ref><sp/>=<sp/><ref refid="motor__controller_8c_1afb41a96439ba6d63dcc64f257c43a1d2" kindref="member">mc_default_settings</ref>.<ref refid="structmotor__controller__settings_1a810e13f814f738ffbde7b0bd18706958" kindref="member">can_id_tx</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>request_msg.<ref refid="structuv___c_a_n__msg_1aa74af3745c8b56910d7c309245541d37" kindref="member">dlc</ref><sp/><sp/><sp/><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>request_msg.<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[0]<sp/>=<sp/>0x3D;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Request<sp/>command<sp/>identifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>request_msg.<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[1]<sp/>=<sp/>RegID;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>register<sp/>to<sp/>be<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>request_msg.<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>request_msg.<ref refid="structuv___c_a_n__msg_1a3a3fdc7fed06a631fefa58ea44052d8d" kindref="member">flags</ref><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__uvfr__can__api_1ga62414944c3b631f57fdd08e467bcf5a4" kindref="member">uvSendCanMSG</ref>(&amp;request_msg)<sp/>!=<sp/><ref refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" kindref="member">UV_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;CAN<sp/>Request<sp/>Transmission<sp/>Failed&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="motor__controller_8c_1a37f4a694fab82b650c96c13fe4894143" refkind="member"><highlight class="normal"><ref refid="can_8h_1aef3770e45bbacbf527fd93dd80eea9b9" kindref="member">uv_status</ref><sp/><ref refid="motor__controller_8c_1a37f4a694fab82b650c96c13fe4894143" kindref="member">MC_Set_Param</ref>(uint8_t<sp/>RegID,uint16_t<sp/>d){</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structuv___c_a_n__msg" kindref="compound">uv_CAN_msg</ref><sp/>tx_msg;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>tx_msg.<ref refid="structuv___c_a_n__msg_1aae369fbabe3cc5b71a89bb641c24aace" kindref="member">msg_id</ref><sp/>=<sp/><ref refid="motor__controller_8c_1afb41a96439ba6d63dcc64f257c43a1d2" kindref="member">mc_default_settings</ref>.<ref refid="structmotor__controller__settings_1a810e13f814f738ffbde7b0bd18706958" kindref="member">can_id_tx</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>tx_msg.<ref refid="structuv___c_a_n__msg_1aa74af3745c8b56910d7c309245541d37" kindref="member">dlc</ref><sp/>=<sp/>3;<sp/></highlight><highlight class="comment">//DLC<sp/>MUST<sp/>BE<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>tx_msg.<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[0]<sp/>=<sp/>RegID;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>tx_msg.<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[1]<sp/>=<sp/>d<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>tx_msg.<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[2]<sp/>=<sp/>(d<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>tx_msg.<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__uvfr__can__api_1ga62414944c3b631f57fdd08e467bcf5a4" kindref="member">uvSendCanMSG</ref>(&amp;tx_msg)<sp/>!=<sp/><ref refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" kindref="member">UV_OK</ref>){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;MC_Param<sp/>set<sp/>fail&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea480ef4e56d17703f0629bfe1e06bc4f0" kindref="member">UV_ERROR</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" kindref="member">UV_OK</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="motor__controller_8c_1a98ef1edcc51198faf53767e8d92ce4c9" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1a98ef1edcc51198faf53767e8d92ce4c9" kindref="member">Parse_Bamocar_Response</ref>(<ref refid="structuv___c_a_n__msg" kindref="compound">uv_CAN_msg</ref>*<sp/>msg)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!msg<sp/>||<sp/>msg-&gt;<ref refid="structuv___c_a_n__msg_1aa74af3745c8b56910d7c309245541d37" kindref="member">dlc</ref><sp/>&lt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>motor<sp/>controller<sp/>response&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>val<sp/>=<sp/>(uint32_t)((msg-&gt;<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[3]<sp/>&lt;&lt;<sp/>24)<sp/>|</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(msg-&gt;<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[2]<sp/>&lt;&lt;<sp/>16)<sp/>|</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(msg-&gt;<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[1]<sp/>&lt;&lt;<sp/>8)<sp/><sp/>|</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg-&gt;<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[0]);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Parsed<sp/>32-bit<sp/>LE<sp/>value:<sp/>0x%08X\n&quot;</highlight><highlight class="normal">,<sp/>val);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>cmd_byte<sp/>=<sp/>msg-&gt;<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[0];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>word<sp/>=<sp/><ref refid="group__utility__macros_1ga829f8b8ab166c6d07df7023ee0b68300" kindref="member">deserializeSmallE16</ref>(msg-&gt;<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>,1);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(cmd_byte){</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x1C:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(word<sp/>!=<sp/><ref refid="motor__controller_8c_1afb41a96439ba6d63dcc64f257c43a1d2" kindref="member">mc_default_settings</ref>.<ref refid="structmotor__controller__settings_1af64381c50076a7d79844fef4ccf7d616" kindref="member">proportional_gain</ref>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;aa&quot;</highlight><highlight class="normal">,0);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Nothing<sp/>we<sp/>recognise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="motor__controller_8c_1aa2fe2c9102e9f2ab65ab4a9d5557f497" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1aa2fe2c9102e9f2ab65ab4a9d5557f497" kindref="member">MotorControllerErrorHandler_16bitLE</ref>(uint8_t<sp/>*data,<sp/>uint8_t<sp/>length)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>errors<sp/>=<sp/>(uint16_t)((data[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>data[0]);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa87ada8cd125ba521b447d565c12bb30e" kindref="member">eprom_read_error</ref>)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;EPROM<sp/>Read<sp/>Error&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffae9da794167969482cb67bfad83a04d71" kindref="member">hardware_fault</ref>)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Hardware<sp/>Fault&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffadae8b5f4fb6cd6712202d055529499ef" kindref="member">rotate_field_enable_not_present_run</ref>)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Rotating<sp/>Field<sp/>Enable<sp/>Not<sp/>Present<sp/>(Run<sp/>Active)&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa425430d2585733363b6043ed70ebd7ab" kindref="member">CAN_timeout_error</ref>)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;CAN<sp/>Timeout<sp/>Error&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2a16f371b0570edeeb17214a398e4bfc" kindref="member">feedback_signal_error</ref>)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Feedback<sp/>Signal<sp/>Error&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa13726d0d6fc8dd12135f4ea92d1dcc92" kindref="member">mains_voltage_min_limit</ref>)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Mains<sp/>Voltage<sp/>Below<sp/>Minimum<sp/>Limit&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa2267f6ae60d8b9024ba418dd1f6d4b15" kindref="member">motor_temp_max_limit</ref>)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Motor<sp/>Temperature<sp/>Exceeded<sp/>Maximum<sp/>Limit&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa54a5ca5981535fd231b00a1040622950" kindref="member">IGBT_temp_max_limit</ref>)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;IGBT<sp/>Temperature<sp/>Exceeded<sp/>Maximum<sp/>Limit&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa229533ef674ddd4475b22e47eb506b49" kindref="member">mains_voltage_max_limit</ref>)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Mains<sp/>Voltage<sp/>Exceeded<sp/>Maximum<sp/>Limit&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa29aa452fe3c693b96c17c09849ee1633" kindref="member">critical_AC_current</ref>)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Critical<sp/>AC<sp/>Current<sp/>Detected&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa696b36face7279e19e2905b0fa9ecb68" kindref="member">race_away_detected</ref>)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Race<sp/>Away<sp/>Detected&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa0dd2c6834f96df064d7b152074a9f81f" kindref="member">ecode_timeout_error</ref>)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Ecode<sp/>Timeout<sp/>Error&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa357611869a1ec791b38a36ec2dfe09b9" kindref="member">watchdog_reset</ref>)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Watchdog<sp/>Reset<sp/>Occurred&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa0dbc9540bf7a4c67b6a2810985bfb55d" kindref="member">AC_current_offset_fault</ref>)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;AC<sp/>Current<sp/>Offset<sp/>Fault&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa18df3363e2a0048a813dcef5a41785ce" kindref="member">internal_hardware_voltage_problem</ref>)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Internal<sp/>Hardware<sp/>Voltage<sp/>Problem&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errors<sp/>&amp;<sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa150953c78b7fcc8ae97a50a5b5765264" kindref="member">bleed_resistor_overload</ref>)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Bleed<sp/>Resistor<sp/>Overload&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>add<sp/>additional<sp/>error<sp/>checks<sp/>as<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="motor__controller_8c_1aaff68bb563bf4ad56841a5a5020cbadc" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1aaff68bb563bf4ad56841a5a5020cbadc" kindref="member">ProcessMotorControllerResponse</ref>(<ref refid="structuv___c_a_n__msg" kindref="compound">uv_CAN_msg</ref>*<sp/>msg)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!msg<sp/>||<sp/>msg-&gt;<ref refid="structuv___c_a_n__msg_1aa74af3745c8b56910d7c309245541d37" kindref="member">dlc</ref><sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>reg_id<sp/>=<sp/>msg-&gt;<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[0];</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(reg_id)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8h_1a8cab19f0549eb777404ec1c7a3b56268a74ac68aa19b65409fa9b18b8f2be3bf4" kindref="member">N_actual</ref>:<sp/><sp/></highlight><highlight class="comment">//<sp/>SPEED_ACTUAL<sp/>(0x30)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg-&gt;<ref refid="structuv___c_a_n__msg_1aa74af3745c8b56910d7c309245541d37" kindref="member">dlc</ref><sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>speed<sp/>=<sp/>(int16_t)((msg-&gt;<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[2]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>msg-&gt;<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[1]);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;SPEED_ACTUAL:<sp/>%d<sp/>rpm\n&quot;</highlight><highlight class="normal">,<sp/>speed);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8h_1aefe525453e2d5fb5ff19de9f98247c7ca08745ee38252c5952330efe1591df091" kindref="member">CURRENT_ACTUAL</ref>:<sp/><sp/></highlight><highlight class="comment">//<sp/>0x31:<sp/>16-bit,<sp/>little-endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg-&gt;<ref refid="structuv___c_a_n__msg_1aa74af3745c8b56910d7c309245541d37" kindref="member">dlc</ref><sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>current_raw<sp/>=<sp/>(int16_t)((msg-&gt;<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[2]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>msg-&gt;<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[1]);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;CURRENT_ACTUAL:<sp/>%d<sp/>(raw<sp/>units)\n&quot;</highlight><highlight class="normal">,<sp/>current_raw);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8h_1a08f38539bd153ea7b7b1be8df1d6f6eda0065463d68046f7a361ad1b060548b27" kindref="member">LOGIMAP_ERRORS</ref>:<sp/><sp/></highlight><highlight class="comment">//<sp/>0x82:<sp/>error<sp/>bitfield,<sp/>little-endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg-&gt;<ref refid="structuv___c_a_n__msg_1aa74af3745c8b56910d7c309245541d37" kindref="member">dlc</ref><sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="motor__controller_8c_1aa2fe2c9102e9f2ab65ab4a9d5557f497" kindref="member">MotorControllerErrorHandler_16bitLE</ref>(&amp;msg-&gt;<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[1],<sp/>2);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8h_1a08f38539bd153ea7b7b1be8df1d6f6eda887c38d92ef273b6fae58dcb51931765" kindref="member">LOGIMAP_IO</ref>:<sp/><sp/></highlight><highlight class="comment">//<sp/>0x83:<sp/>I/O<sp/>status,<sp/>16-bit,<sp/>little-endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg-&gt;<ref refid="structuv___c_a_n__msg_1aa74af3745c8b56910d7c309245541d37" kindref="member">dlc</ref><sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>io_flags<sp/>=<sp/>(uint16_t)((msg-&gt;<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[2]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>msg-&gt;<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[1]);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;LOGIMAP_IO<sp/>flags:<sp/>0x%04X\n&quot;</highlight><highlight class="normal">,<sp/>io_flags);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8h_1a08f38539bd153ea7b7b1be8df1d6f6eda75b5d9cefe36e570d9e0c306fb0e22fc" kindref="member">POS_ACTUAL</ref>:<sp/><sp/></highlight><highlight class="comment">//<sp/>0x86:<sp/>32-bit<sp/>value,<sp/>little-endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg-&gt;<ref refid="structuv___c_a_n__msg_1aa74af3745c8b56910d7c309245541d37" kindref="member">dlc</ref><sp/>&gt;=<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>pos<sp/>=<sp/>(int32_t)((msg-&gt;<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[4]<sp/>&lt;&lt;<sp/>24)<sp/>|</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(msg-&gt;<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[3]<sp/>&lt;&lt;<sp/>16)<sp/>|</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(msg-&gt;<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[2]<sp/>&lt;&lt;<sp/>8)<sp/><sp/>|</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg-&gt;<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[1]);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;POS_ACTUAL:<sp/>%ld\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)pos);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa595211bb6640ca05c1c3344b47e2890f" kindref="member">motor_controller_errors_warnings</ref>:</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>error/warning<sp/>responses<sp/>using<sp/>this<sp/>register,<sp/>assume<sp/>a<sp/>16-bit<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg-&gt;<ref refid="structuv___c_a_n__msg_1aa74af3745c8b56910d7c309245541d37" kindref="member">dlc</ref><sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="motor__controller_8c_1aa2fe2c9102e9f2ab65ab4a9d5557f497" kindref="member">MotorControllerErrorHandler_16bitLE</ref>(&amp;msg-&gt;<ref refid="structuv___c_a_n__msg_1aec63cc112176da7895d0cfc8b32e6935" kindref="member">data</ref>[1],<sp/>2);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>other<sp/>responses<sp/>as<sp/>needed<sp/>or<sp/>call<sp/>a<sp/>default<sp/>parser.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="motor__controller_8c_1aed1407e1e0fd59dc7c5e5d6db671f0ab" kindref="member">MC_Startup</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>args)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_GPIO_TogglePin(GPIOD,<sp/>GPIO_PIN_14);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structuv__init__task__args" kindref="compound">uv_init_task_args</ref>*<sp/>MC_init_args<sp/>=<sp/>(<ref refid="structuv__init__task__args" kindref="compound">uv_init_task_args</ref>*)args;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>QueueHandle_t<sp/>queue<sp/>=<sp/>MC_init_args-&gt;<ref refid="structuv__init__task__args_1adec47e7a54822cacfb8fcfc35a22157f" kindref="member">init_info_queue</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structuv__init__task__response" kindref="compound">uv_init_task_response</ref><sp/>rx;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>rx.<ref refid="structuv__init__task__response_1adfcb943d08344e528ad3d49c5c428918" kindref="member">device</ref><sp/>=<sp/><ref refid="uvfr__utils_8h_1ad70cbc8929c4ad7a5901cd9eef5ca9b0a9c632ecb370b78547a390d1b5cf59671" kindref="member">MOTOR_CONTROLLER</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>rx.<ref refid="structuv__init__task__response_1a56b3df74c10cdc59e8e1b9d4c1f36af7" kindref="member">status</ref><sp/>=<sp/><ref refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" kindref="member">UV_OK</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__uvfr__can__api_1ga81adc4a577110ce8fe1158b0dc302cc2" kindref="member">insertCANMessageHandler</ref>(0x181,<sp/><ref refid="motor__controller_8c_1a98ef1edcc51198faf53767e8d92ce4c9" kindref="member">Parse_Bamocar_Response</ref>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Example:<sp/>Request<sp/>serial<sp/>number<sp/>and<sp/>firmware<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" kindref="member">MC_Request_Data</ref>(<ref refid="motor__controller_8h_1aab8c03dc3480e25a7a75b60edbf51cb3" kindref="member">SERIAL_NUMBER_REGISTER</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(10);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" kindref="member">MC_Request_Data</ref>(<ref refid="motor__controller_8h_1a829d1af845327949015b4e83bb6fc43d" kindref="member">FIRMWARE_VERSION_REGISTER</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>a<sp/>nominal<sp/>torque<sp/>command<sp/>(e.g.,<sp/>10.0<sp/>units).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="motor__controller_8c_1ad9944bce211ed6594929c3acf72e3881" kindref="member">MotorControllerSpinTest</ref>(10.0f)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;Motor<sp/>Spin<sp/>Test<sp/>Failed&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(10);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Request<sp/>error<sp/>data<sp/>(if<sp/>desired,<sp/>e.g.,<sp/>using<sp/>the<sp/>error/warning<sp/>register).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" kindref="member">MC_Request_Data</ref>((uint8_t)<ref refid="motor__controller_8h_1a5e2fbf1b4105e76b330bcb6547533dffa595211bb6640ca05c1c3344b47e2890f" kindref="member">motor_controller_errors_warnings</ref>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(10);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" kindref="member">MC_Request_Data</ref>(0x1C);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(10);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>dat<sp/>=<sp/><ref refid="motor__controller_8c_1afb41a96439ba6d63dcc64f257c43a1d2" kindref="member">mc_default_settings</ref>.<ref refid="structmotor__controller__settings_1af64381c50076a7d79844fef4ccf7d616" kindref="member">proportional_gain</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="motor__controller_8c_1a37f4a694fab82b650c96c13fe4894143" kindref="member">MC_Set_Param</ref>(0x1C,dat);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(30);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="motor__controller_8c_1af6b3a4911f1bdac54d84b4dcc7b7ec4a" kindref="member">MC_Request_Data</ref>(0x1C);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optionally,<sp/>signal<sp/>success<sp/>via<sp/>an<sp/>RTOS<sp/>queue<sp/>here...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>xQueueSend(queue,&amp;rx,0);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Suspend<sp/>this<sp/>task<sp/>so<sp/>it<sp/>does<sp/>not<sp/>run<sp/>repeatedly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskSuspend(NULL);</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Core/Src/motor_controller.c"/>
  </compounddef>
</doxygen>
