<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="driving__loop_8c" kind="file" language="C++">
    <compoundname>driving_loop.c</compoundname>
    <includes refid="main_8h" local="yes">main.h</includes>
    <includes refid="uvfr__utils_8h" local="yes">uvfr_utils.h</includes>
    <includes refid="can_8h" local="yes">can.h</includes>
    <includes refid="motor__controller_8h" local="yes">motor_controller.h</includes>
    <includes local="yes">FreeRTOS.h</includes>
    <includes local="yes">task.h</includes>
    <includes local="yes">cmsis_os.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="driving__loop_8h" local="yes">driving_loop.h</includes>
    <incdepgraph>
      <node id="4">
        <label>stdarg.h</label>
      </node>
      <node id="12">
        <label>tim.h</label>
        <link refid="tim_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>imd.h</label>
        <link refid="imd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>dash.h</label>
        <link refid="dash_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>driving_loop.h</label>
        <link refid="driving__loop_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>temp_monitoring.h</label>
        <link refid="temp__monitoring_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>stdint.h</label>
      </node>
      <node id="33">
        <label>stdlib.h</label>
      </node>
      <node id="28">
        <label>oled.h</label>
        <link refid="oled_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>adc.h</label>
        <link refid="adc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cmsis_os.h</label>
      </node>
      <node id="5">
        <label>uvfr_utils.h</label>
        <link refid="uvfr__utils_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>message_buffer.h</label>
      </node>
      <node id="23">
        <label>bms.h</label>
        <link refid="bms_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Core/Src/driving_loop.c</label>
        <link refid="driving__loop_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>spi.h</label>
        <link refid="spi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>pdu.h</label>
        <link refid="pdu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>motor_controller.h</label>
        <link refid="motor__controller_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>uvfr_settings.h</label>
        <link refid="uvfr__settings_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>daq.h</label>
        <link refid="daq_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>gpio.h</label>
        <link refid="gpio_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>rb_tree.h</label>
        <link refid="rb__tree_8h"/>
      </node>
      <node id="10">
        <label>constants.h</label>
        <link refid="constants_8h"/>
      </node>
      <node id="9">
        <label>can.h</label>
        <link refid="can_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>uvfr_global_config.h</label>
        <link refid="uvfr__global__config_8h"/>
      </node>
      <node id="31">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
      </node>
      <node id="24">
        <label>uvfr_state_engine.h</label>
        <link refid="uvfr__state__engine_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>odometer.h</label>
        <link refid="odometer_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stm32f4xx_hal.h</label>
      </node>
      <node id="34">
        <label>stdio.h</label>
      </node>
      <node id="15">
        <label>FreeRTOS.h</label>
      </node>
      <node id="11">
        <label>dma.h</label>
        <link refid="dma_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>task.h</label>
      </node>
      <node id="2">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="driving__loop_8c_1a3fa2d9e8a3ff5bc7ac576fda26265b44" prot="public" static="no">
        <name>ACCELERATION</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/driving_loop.c" line="100" column="9" bodyfile="Core/Src/driving_loop.c" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="driving__loop_8c_1a7c627c95d1731c3c24a41b8aa86a5fd5" prot="public" static="no">
        <name>AUTOCROSS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/driving_loop.c" line="101" column="9" bodyfile="Core/Src/driving_loop.c" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="driving__loop_8c_1a64a87e1f80735e94aac871db572dda97" prot="public" static="no">
        <name>ENDURANCE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/driving_loop.c" line="102" column="9" bodyfile="Core/Src/driving_loop.c" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="driving__loop_8c_1a549b3590f54dfc129d2eebf2604c16e8" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t adc1_APPS1</definition>
        <argsstring></argsstring>
        <name>adc1_APPS1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/driving_loop.c" line="22" column="17" bodyfile="Core/Src/main.c" bodystart="64" bodyend="-1" declfile="Core/Src/driving_loop.c" declline="22" declcolumn="17"/>
        <referencedby refid="main_8c_1a8cf5c59c6355fe7cf3c10816c761b9c2" compoundref="main_8c" startline="336" endline="347">HAL_ADC_LevelOutOfWindowCallback</referencedby>
        <referencedby refid="driving__loop_8c_1af580185fb5bb1cfba30ee1709d90628c" compoundref="driving__loop_8c" startline="42" endline="85">initDrivingLoop</referencedby>
        <referencedby refid="main_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="main_8c" startline="97" endline="211">main</referencedby>
        <referencedby refid="driving__loop_8c_1a80cc48f06202edc29bcad26a956bcc98" compoundref="driving__loop_8c" startline="194" endline="338">StartDrivingLoop</referencedby>
      </memberdef>
      <memberdef kind="variable" id="driving__loop_8c_1a8567d6e2f5ad8bd53f71ecc2b2b0ae30" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t adc1_APPS2</definition>
        <argsstring></argsstring>
        <name>adc1_APPS2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/driving_loop.c" line="23" column="17" bodyfile="Core/Src/main.c" bodystart="65" bodyend="-1" declfile="Core/Src/driving_loop.c" declline="23" declcolumn="17"/>
        <referencedby refid="main_8c_1a8cf5c59c6355fe7cf3c10816c761b9c2" compoundref="main_8c" startline="336" endline="347">HAL_ADC_LevelOutOfWindowCallback</referencedby>
        <referencedby refid="driving__loop_8c_1af580185fb5bb1cfba30ee1709d90628c" compoundref="driving__loop_8c" startline="42" endline="85">initDrivingLoop</referencedby>
        <referencedby refid="main_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="main_8c" startline="97" endline="211">main</referencedby>
        <referencedby refid="driving__loop_8c_1a80cc48f06202edc29bcad26a956bcc98" compoundref="driving__loop_8c" startline="194" endline="338">StartDrivingLoop</referencedby>
      </memberdef>
      <memberdef kind="variable" id="driving__loop_8c_1ad36d3aa4037203058df6816d56f4c186" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t adc1_BPS1</definition>
        <argsstring></argsstring>
        <name>adc1_BPS1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/driving_loop.c" line="24" column="17" bodyfile="Core/Src/main.c" bodystart="66" bodyend="-1" declfile="Core/Src/driving_loop.c" declline="24" declcolumn="17"/>
        <referencedby refid="driving__loop_8c_1af580185fb5bb1cfba30ee1709d90628c" compoundref="driving__loop_8c" startline="42" endline="85">initDrivingLoop</referencedby>
        <referencedby refid="driving__loop_8c_1a80cc48f06202edc29bcad26a956bcc98" compoundref="driving__loop_8c" startline="194" endline="338">StartDrivingLoop</referencedby>
      </memberdef>
      <memberdef kind="variable" id="driving__loop_8c_1a277f7921a7a1e0fb8a6f953943dc06dc" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t adc1_BPS2</definition>
        <argsstring></argsstring>
        <name>adc1_BPS2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/driving_loop.c" line="25" column="17" bodyfile="Core/Src/main.c" bodystart="67" bodyend="-1" declfile="Core/Src/driving_loop.c" declline="25" declcolumn="17"/>
        <referencedby refid="driving__loop_8c_1af580185fb5bb1cfba30ee1709d90628c" compoundref="driving__loop_8c" startline="42" endline="85">initDrivingLoop</referencedby>
        <referencedby refid="driving__loop_8c_1a80cc48f06202edc29bcad26a956bcc98" compoundref="driving__loop_8c" startline="194" endline="338">StartDrivingLoop</referencedby>
      </memberdef>
      <memberdef kind="variable" id="driving__loop_8c_1ab8788a0f246816c11002008cb43d1886" prot="public" static="no" mutable="no">
        <type><ref refid="structdriving__loop__args" kindref="compound">driving_loop_args</ref></type>
        <definition>driving_loop_args default_dl_settings</definition>
        <argsstring></argsstring>
        <name>default_dl_settings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/driving_loop.c" line="27" column="19" bodyfile="Core/Src/driving_loop.c" bodystart="27" bodyend="-1"/>
        <referencedby refid="uvfr__settings_8c_1add1ebdaa7f93f2a43ca6afc6e05fdd44" compoundref="uvfr__settings_8c" startline="232" endline="255">setupDefaultSettings</referencedby>
        <referencedby refid="uvfr__settings_8c_1a5f5ab3b99bc259455a2ec79144422450" compoundref="uvfr__settings_8c" startline="1057" endline="1138">uvResetFlashToDefault</referencedby>
      </memberdef>
      <memberdef kind="variable" id="driving__loop_8c_1a401dd8422f51d8d344e5ac9559ef8908" prot="public" static="no" mutable="no">
        <type><ref refid="structdriving__loop__args" kindref="compound">driving_loop_args</ref> *</type>
        <definition>driving_loop_args* driving_args</definition>
        <argsstring></argsstring>
        <name>driving_args</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/driving_loop.c" line="29" column="19" bodyfile="Core/Src/driving_loop.c" bodystart="29" bodyend="-1"/>
        <referencedby refid="driving__loop_8c_1ad5227d6e3a1f9c241f31f07abe9f1695" compoundref="driving__loop_8c" startline="117" endline="137">calculateThrottlePercentage</referencedby>
        <referencedby refid="driving__loop_8c_1af580185fb5bb1cfba30ee1709d90628c" compoundref="driving__loop_8c" startline="42" endline="85">initDrivingLoop</referencedby>
        <referencedby refid="driving__loop_8c_1a14bdb2b38c226aa850a0c25207afd1fa" compoundref="driving__loop_8c" startline="87" endline="98">mapThrottleToTorque</referencedby>
      </memberdef>
      <memberdef kind="variable" id="driving__loop_8c_1a15e200c9bf4f5d49b02215e273d2d841" prot="public" static="no" mutable="no">
        <type><ref refid="uvfr__utils_8h_1a0ecf26b576b9a54eca656b9be7ba6a06" kindref="member">bool</ref></type>
        <definition>bool is_accelerating</definition>
        <argsstring></argsstring>
        <name>is_accelerating</name>
        <initializer>= <ref refid="group__utility__macros_1ga65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/driving_loop.c" line="34" column="6" bodyfile="Core/Src/driving_loop.c" bodystart="34" bodyend="-1"/>
        <referencedby refid="driving__loop_8c_1a42c4321a28da09906e185c9c5971fce9" compoundref="driving__loop_8c" startline="149" endline="173">applyTorqueFilter</referencedby>
        <referencedby refid="driving__loop_8c_1a80cc48f06202edc29bcad26a956bcc98" compoundref="driving__loop_8c" startline="194" endline="338">StartDrivingLoop</referencedby>
      </memberdef>
      <memberdef kind="variable" id="driving__loop_8c_1afb126e9ab9acbc2c02585ce5728a538a" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float T_PREV</definition>
        <argsstring></argsstring>
        <name>T_PREV</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/driving_loop.c" line="35" column="7" bodyfile="Core/Src/driving_loop.c" bodystart="35" bodyend="-1"/>
        <referencedby refid="driving__loop_8c_1a80cc48f06202edc29bcad26a956bcc98" compoundref="driving__loop_8c" startline="194" endline="338">StartDrivingLoop</referencedby>
      </memberdef>
      <memberdef kind="variable" id="driving__loop_8c_1a8096732d061a4d6d6a9b78780025f056" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float T_REQ</definition>
        <argsstring></argsstring>
        <name>T_REQ</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/driving_loop.c" line="36" column="7" bodyfile="Core/Src/driving_loop.c" bodystart="36" bodyend="-1"/>
        <referencedby refid="driving__loop_8c_1a80cc48f06202edc29bcad26a956bcc98" compoundref="driving__loop_8c" startline="194" endline="338">StartDrivingLoop</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="driving__loop_8c_1ad5227d6e3a1f9c241f31f07abe9f1695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float calculateThrottlePercentage</definition>
        <argsstring>(uint16_t apps1, uint16_t apps2)</argsstring>
        <name>calculateThrottlePercentage</name>
        <param>
          <type>uint16_t</type>
          <declname>apps1</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>apps2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/driving_loop.c" line="117" column="7" bodyfile="Core/Src/driving_loop.c" bodystart="117" bodyend="137" declfile="Core/Src/driving_loop.c" declline="39" declcolumn="7"/>
        <references refid="driving__loop_8c_1a401dd8422f51d8d344e5ac9559ef8908" compoundref="driving__loop_8c" startline="29">driving_args</references>
        <references refid="structdriving__loop__args_1a5de5af253c2b8fb31fcfed6e639e7ebf" compoundref="driving__loop_8h" startline="123">driving_loop_args::max_apps1_value</references>
        <references refid="structdriving__loop__args_1ab6ea518520efa72bf81353dc0efdf15e" compoundref="driving__loop_8h" startline="126">driving_loop_args::max_apps2_value</references>
        <references refid="structdriving__loop__args_1a1b5e703a1791d3321357cf65ce4832ce" compoundref="driving__loop_8h" startline="124">driving_loop_args::min_apps1_value</references>
      </memberdef>
      <memberdef kind="function" id="driving__loop_8c_1ac9c776513f26edd5cf75280eea26275b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="uvfr__utils_8h_1a0ecf26b576b9a54eca656b9be7ba6a06" kindref="member">bool</ref></type>
        <definition>bool performSafetyChecks</definition>
        <argsstring>(driving_loop_args *dl_params, uint16_t apps1_value, uint16_t apps2_value, uint16_t bps1_value, uint16_t bps2_value, enum DL_internal_state *dl_status)</argsstring>
        <name>performSafetyChecks</name>
        <param>
          <type><ref refid="structdriving__loop__args" kindref="compound">driving_loop_args</ref> *</type>
          <declname>dl_params</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>apps1_value</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>apps2_value</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>bps1_value</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>bps2_value</declname>
        </param>
        <param>
          <type>enum <ref refid="driving__loop_8h_1adef4571b048b5b1f2b712713741296c7" kindref="member">DL_internal_state</ref> *</type>
          <declname>dl_status</declname>
        </param>
        <briefdescription>
<para>Converts APPS sensor readings into a throttle percentage. </para>
        </briefdescription>
        <detaileddescription>
<para>rachan <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>apps1</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw voltage value from APPS1 sensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>apps2</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw voltage value from APPS2 sensor</para>
</parameterdescription>
</parameteritem>
</parameterlist>
TO DO: Set RPM_MAX &amp; RPM_MIN <simplesect kind="return"><para>Throttle percentage (0% to 100%). AMMAR</para>
</simplesect>
Maps Throttle Percentage to Torque Request. Call the calculateThrottlePercentage function to get the value <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>throttle_percent</parametername>
</parameternamelist>
<parameterdescription>
<para>Throttle percentage (0% - 100%).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Requested torque in Nm. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/driving_loop.c" line="452" column="6" bodyfile="Core/Src/driving_loop.c" bodystart="452" bodyend="554" declfile="Core/Src/driving_loop.c" declline="40" declcolumn="6"/>
        <referencedby refid="driving__loop_8c_1a80cc48f06202edc29bcad26a956bcc98" compoundref="driving__loop_8c" startline="194" endline="338">StartDrivingLoop</referencedby>
      </memberdef>
      <memberdef kind="function" id="driving__loop_8c_1af580185fb5bb1cfba30ee1709d90628c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9e" kindref="member">uv_status_t</ref></type>
        <definition>enum uv_status_t initDrivingLoop</definition>
        <argsstring>(void *argument)</argsstring>
        <name>initDrivingLoop</name>
        <param>
          <type>void *</type>
          <declname>argument</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/driving_loop.c" line="40" column="6" bodyfile="Core/Src/driving_loop.c" bodystart="42" bodyend="85"/>
        <references refid="structuv__task__info_1ab24dea3bde4de2d839bf15e65c2df0d6" compoundref="uvfr__state__engine_8h" startline="251">uv_task_info::active_states</references>
        <references refid="driving__loop_8c_1a549b3590f54dfc129d2eebf2604c16e8" compoundref="main_8c" startline="64">adc1_APPS1</references>
        <references refid="driving__loop_8c_1a8567d6e2f5ad8bd53f71ecc2b2b0ae30" compoundref="main_8c" startline="65">adc1_APPS2</references>
        <references refid="driving__loop_8c_1ad36d3aa4037203058df6816d56f4c186" compoundref="main_8c" startline="66">adc1_BPS1</references>
        <references refid="driving__loop_8c_1a277f7921a7a1e0fb8a6f953943dc06dc" compoundref="main_8c" startline="67">adc1_BPS2</references>
        <references refid="daq_8h_1a5249d5d3ad44df9d4479b814028469a9a4aa469f8ff609f64a67cb8f94bbae331" compoundref="daq_8h" startline="47">APPS1_ADC_VAL</references>
        <references refid="daq_8h_1a5249d5d3ad44df9d4479b814028469a9a649cfa800751dbfadfee50fbb49f8a0c" compoundref="daq_8h" startline="48">APPS2_ADC_VAL</references>
        <references refid="daq_8h_1a56ca1193de01115c27ceb3768994017f" compoundref="daq_8c" startline="99" endline="111">associateDaqParamWithVar</references>
        <references refid="daq_8h_1a5249d5d3ad44df9d4479b814028469a9a217d6550cdad0d3eaff0189d269d8929" compoundref="daq_8h" startline="49">BPS1_ADC_VAL</references>
        <references refid="daq_8h_1a5249d5d3ad44df9d4479b814028469a9a75e438f4c4f3e2113352eb85475f8fa7" compoundref="daq_8h" startline="50">BPS2_ADC_VAL</references>
        <references refid="uvfr__settings_8h_1a03566822d1b8893362970a459bd67daf" compoundref="uvfr__settings_8c" startline="20">current_vehicle_settings</references>
        <references refid="structuv__task__info_1a6986d7216c7f889164931b37ab752c29" compoundref="uvfr__state__engine_8h" startline="252">uv_task_info::deletion_states</references>
        <references refid="driving__loop_8c_1a401dd8422f51d8d344e5ac9559ef8908" compoundref="driving__loop_8c" startline="29">driving_args</references>
        <references refid="structuv__vehicle__settings_1a7a5207ef389290242764f49c6c48a5ad" compoundref="uvfr__settings_8h" startline="141">uv_vehicle_settings::driving_loop_settings</references>
        <references refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4abed5371c079ef927fb67d8bb8e8aa286" compoundref="uvfr__state__engine_8h" startline="84">PROGRAMMING</references>
        <references refid="structuv__task__info_1a353ec6bf2c42ab0920f3d1e671e568a3" compoundref="uvfr__state__engine_8h" startline="231">uv_task_info::stack_size</references>
        <references refid="driving__loop_8c_1a80cc48f06202edc29bcad26a956bcc98" compoundref="driving__loop_8c" startline="194" endline="338">StartDrivingLoop</references>
        <references refid="structuv__task__info_1aafd4e2d916f50b54b99fd02d63831e43" compoundref="uvfr__state__engine_8h" startline="253">uv_task_info::suspension_states</references>
        <references refid="structuv__task__info_1ae255dff9b38fc8c0754085060e8ae699" compoundref="uvfr__state__engine_8h" startline="243">uv_task_info::task_args</references>
        <references refid="structuv__task__info_1afcd240d2b6b01b4acea600ef4dfe8fbc" compoundref="uvfr__state__engine_8h" startline="227">uv_task_info::task_function</references>
        <references refid="structuv__task__info_1ad24b438130bb3098ee5e855222dff21d" compoundref="uvfr__state__engine_8h" startline="222">uv_task_info::task_name</references>
        <references refid="structuv__task__info_1ad157811debce6672bb6d00da7e90b6ca" compoundref="uvfr__state__engine_8h" startline="224">uv_task_info::task_period</references>
        <references refid="structuv__task__info_1aff45751f7189980589d55379d1d5a355" compoundref="uvfr__state__engine_8h" startline="228">uv_task_info::task_priority</references>
        <references refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4aa4f9f0d81d66079ab97ea3abc3808969" compoundref="uvfr__state__engine_8h" startline="85">UV_DRIVING</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea480ef4e56d17703f0629bfe1e06bc4f0" compoundref="uvfr__utils_8h" startline="169">UV_ERROR</references>
        <references refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4ac1fcacc095b8c0f1c9f452d51815bcb5" compoundref="uvfr__state__engine_8h" startline="88">UV_ERROR_STATE</references>
        <references refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a5e3e7ecab0a58b320912cb4129641579" compoundref="uvfr__state__engine_8h" startline="82">UV_INIT</references>
        <references refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a7ff39f8abdc9adbfd693e412e4aaeb6e" compoundref="uvfr__state__engine_8h" startline="87">UV_LAUNCH_CONTROL</references>
        <references refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" compoundref="uvfr__utils_8h" startline="167">UV_OK</references>
        <references refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a9ec1eef180c6208b25b08f0526dc5eb8" compoundref="uvfr__state__engine_8h" startline="83">UV_READY</references>
        <references refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4abfddf18c580c465bb3c27b522aa4e4a9" compoundref="uvfr__state__engine_8h" startline="86">UV_SUSPENDED</references>
        <references refid="group__state__engine__api_1ga99bfc92472cdc99e9005e9d3c792909a" compoundref="uvfr__state__engine_8c" startline="272" endline="310">uvCreateTask</references>
        <referencedby refid="group__state__engine__api_1ga5c608f3832c45eac6e2da198d4ef1ba0" compoundref="uvfr__state__engine_8c" startline="171" endline="193">uvInitStateEngine</referencedby>
      </memberdef>
      <memberdef kind="function" id="driving__loop_8c_1a14bdb2b38c226aa850a0c25207afd1fa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float mapThrottleToTorque</definition>
        <argsstring>(float throttle_percent)</argsstring>
        <name>mapThrottleToTorque</name>
        <param>
          <type>float</type>
          <declname>throttle_percent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/driving_loop.c" line="87" column="21" bodyfile="Core/Src/driving_loop.c" bodystart="87" bodyend="98"/>
        <references refid="structdriving__loop__args_1aa02edefb5d12e375c67b0dede9f3d980" compoundref="driving__loop_8h" startline="110">driving_loop_args::absolute_max_motor_torque</references>
        <references refid="driving__loop_8c_1a401dd8422f51d8d344e5ac9559ef8908" compoundref="driving__loop_8c" startline="29">driving_args</references>
      </memberdef>
      <memberdef kind="function" id="driving__loop_8c_1abdfd52d179ac8c6707ea8e0ddb98b7cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float getKValue</definition>
        <argsstring>(int raceMode)</argsstring>
        <name>getKValue</name>
        <param>
          <type>int</type>
          <declname>raceMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/driving_loop.c" line="105" column="14" bodyfile="Core/Src/driving_loop.c" bodystart="105" bodyend="115"/>
        <references refid="driving__loop_8c_1a3fa2d9e8a3ff5bc7ac576fda26265b44" compoundref="driving__loop_8c" startline="100">ACCELERATION</references>
        <references refid="driving__loop_8c_1a7c627c95d1731c3c24a41b8aa86a5fd5" compoundref="driving__loop_8c" startline="101">AUTOCROSS</references>
        <references refid="driving__loop_8c_1a64a87e1f80735e94aac871db572dda97" compoundref="driving__loop_8c" startline="102">ENDURANCE</references>
        <referencedby refid="driving__loop_8c_1a42c4321a28da09906e185c9c5971fce9" compoundref="driving__loop_8c" startline="149" endline="173">applyTorqueFilter</referencedby>
      </memberdef>
      <memberdef kind="function" id="driving__loop_8c_1a42c4321a28da09906e185c9c5971fce9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float applyTorqueFilter</definition>
        <argsstring>(float T_req, float T_prev, bool is_accelearting)</argsstring>
        <name>applyTorqueFilter</name>
        <param>
          <type>float</type>
          <declname>T_req</declname>
        </param>
        <param>
          <type>float</type>
          <declname>T_prev</declname>
        </param>
        <param>
          <type><ref refid="uvfr__utils_8h_1a0ecf26b576b9a54eca656b9be7ba6a06" kindref="member">bool</ref></type>
          <declname>is_accelearting</declname>
        </param>
        <briefdescription>
<para>Applies filtering to smooth torque transitions. </para>
        </briefdescription>
        <detaileddescription>
<para>Rachan <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T_req</parametername>
</parameternamelist>
<parameterdescription>
<para>Requested torque before filtering. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_prev</parametername>
</parameternamelist>
<parameterdescription>
<para>Previous filtered torque value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Smoothed torque value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/driving_loop.c" line="149" column="21" bodyfile="Core/Src/driving_loop.c" bodystart="149" bodyend="173"/>
        <references refid="driving__loop_8c_1abdfd52d179ac8c6707ea8e0ddb98b7cd" compoundref="driving__loop_8c" startline="105" endline="115">getKValue</references>
        <references refid="driving__loop_8c_1a15e200c9bf4f5d49b02215e273d2d841" compoundref="driving__loop_8c" startline="34">is_accelerating</references>
      </memberdef>
      <memberdef kind="function" id="driving__loop_8c_1a1eee9dfaef3aaaf010bd8bb12fa20fc3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sendTorqueToMotorController</definition>
        <argsstring>(float T_filtered)</argsstring>
        <name>sendTorqueToMotorController</name>
        <param>
          <type>float</type>
          <declname>T_filtered</declname>
        </param>
        <briefdescription>
<para>Sends the filtered torque value to the motor controller. </para>
        </briefdescription>
        <detaileddescription>
<para>Rachan <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T_filtered</parametername>
</parameternamelist>
<parameterdescription>
<para>Final torque value after filtering. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Src/driving_loop.c" line="182" column="13" bodyfile="Core/Src/driving_loop.c" bodystart="182" bodyend="185"/>
        <references refid="motor__controller_8h_1ad9944bce211ed6594929c3acf72e3881" compoundref="motor__controller_8c" startline="30" endline="56">MotorControllerSpinTest</references>
      </memberdef>
      <memberdef kind="function" id="driving__loop_8c_1a80cc48f06202edc29bcad26a956bcc98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void StartDrivingLoop</definition>
        <argsstring>(void *argument)</argsstring>
        <name>StartDrivingLoop</name>
        <param>
          <type>void *</type>
          <declname>argument</declname>
        </param>
        <briefdescription>
<para>Function implementing the ledTask thread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Not used for now. Will have configuration settings later. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para>This function is made to be the meat and potatoes of the entire vehicle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>The first thing we do here is create some local variables here, to cache whatever variables need cached. We will be caching variables that are used very frequently in every single loop iteration, and are not</para>
<para>This line extracts the specific driving loop parameters as specified in the vehicle settings <programlisting><codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">driving_loop_args*<sp/>dl_params<sp/>=<sp/>(driving_loop_args*)<sp/>params-&gt;task_args;</highlight></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
</programlisting></para>
<para>These here lines set the delay. This task executes exactly at the period specified, regardless of how long the task execution actually takes rachan: ensures the function runs exactly 100ms, regardless of execution time.</para>
<para><programlisting><codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">TickType_t<sp/>tick_period<sp/>=<sp/>pdMS_TO_TICKS(params-&gt;task_period);<sp/>//Convert<sp/>ms<sp/>of<sp/>period<sp/>to<sp/>the<sp/>RTOS<sp/>ticks</highlight></codeline>
<codeline><highlight class="normal">TickType_t<sp/>last_time<sp/>=<sp/>xTaskGetTickCount();</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
</programlisting></para>
<para>Performs safety checks on APPS (Throttle) and BPS (Brake) sensors.</para>
<para>This function ensures that:<itemizedlist>
<listitem><para>Throttle position sensors (APPS1 &amp; APPS2) are within 10% of each other.</para>
</listitem><listitem><para>Brake pressure sensors (BPS1 &amp; BPS2) are within 5% of each other.</para>
</listitem><listitem><para>Sensors are within their expected min/max ranges.</para>
</listitem><listitem><para>Brake and throttle are not pressed at the same time.</para>
</listitem></itemizedlist>
</para>
<para>If a <bold>fatal error</bold> is detected (e.g., sensor out of range), the function:<itemizedlist>
<listitem><para><bold>Stops the motor</bold>.</para>
</listitem><listitem><para><bold>Kills the task execution</bold> (<computeroutput><ref refid="group__state__engine__backend_1ga5f35b34432afed7f18f91fb8607f096f" kindref="member">killSelf()</ref></computeroutput>).</para>
</listitem></itemizedlist>
</para>
<para>If a <bold>non-fatal error</bold> occurs (e.g., sensor mismatch exceeding the limit):<itemizedlist>
<listitem><para><bold>Stops the motor</bold>.</para>
</listitem><listitem><para><bold>Suspends the task temporarily</bold> (<computeroutput><ref refid="group__state__engine__backend_1gad6117850b55ad52be51d93915bcc313c" kindref="member">suspendSelf()</ref></computeroutput>).</para>
</listitem></itemizedlist>
</para>
<para>If safety conditions return to normal, the function:<itemizedlist>
<listitem><para><bold>Restarts the motor</bold>.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dl_params</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driving loop parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>apps1_value</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw sensor reading from APPS1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>apps2_value</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw sensor reading from APPS2. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bps1_value</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw sensor reading from BPS1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bps2_value</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw sensor reading from BPS2. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the current task information. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dl_status</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driving loop internal state.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>All safety checks passed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>One or more safety checks failed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </inbodydescription>
        <location file="Core/Src/driving_loop.c" line="194" column="6" bodyfile="Core/Src/driving_loop.c" bodystart="194" bodyend="338"/>
        <references refid="driving__loop_8c_1a549b3590f54dfc129d2eebf2604c16e8" compoundref="main_8c" startline="64">adc1_APPS1</references>
        <references refid="driving__loop_8c_1a8567d6e2f5ad8bd53f71ecc2b2b0ae30" compoundref="main_8c" startline="65">adc1_APPS2</references>
        <references refid="driving__loop_8c_1ad36d3aa4037203058df6816d56f4c186" compoundref="main_8c" startline="66">adc1_BPS1</references>
        <references refid="driving__loop_8c_1a277f7921a7a1e0fb8a6f953943dc06dc" compoundref="main_8c" startline="67">adc1_BPS2</references>
        <references refid="structuv__task__info_1af532b5031cd6a168a3ec45ab9ead4f23" compoundref="uvfr__state__engine_8h" startline="241">uv_task_info::cmd_data</references>
        <references refid="driving__loop_8c_1a15e200c9bf4f5d49b02215e273d2d841" compoundref="driving__loop_8c" startline="34">is_accelerating</references>
        <references refid="group__state__engine__backend_1ga5f35b34432afed7f18f91fb8607f096f" compoundref="uvfr__state__engine_8c" startline="717" endline="750">killSelf</references>
        <references refid="driving__loop_8c_1ac9c776513f26edd5cf75280eea26275b" compoundref="driving__loop_8c" startline="452" endline="554">performSafetyChecks</references>
        <references refid="driving__loop_8h_1adef4571b048b5b1f2b712713741296c7a51000915ad3f7b4a5874322723d879ca" compoundref="driving__loop_8h" startline="43">Plausible</references>
        <references refid="group__state__engine__backend_1gad6117850b55ad52be51d93915bcc313c" compoundref="uvfr__state__engine_8c" startline="758" endline="789">suspendSelf</references>
        <references refid="driving__loop_8c_1afb126e9ab9acbc2c02585ce5728a538a" compoundref="driving__loop_8c" startline="35">T_PREV</references>
        <references refid="driving__loop_8c_1a8096732d061a4d6d6a9b78780025f056" compoundref="driving__loop_8c" startline="36">T_REQ</references>
        <references refid="structuv__task__info_1ae255dff9b38fc8c0754085060e8ae699" compoundref="uvfr__state__engine_8h" startline="243">uv_task_info::task_args</references>
        <references refid="structuv__task__info_1ad157811debce6672bb6d00da7e90b6ca" compoundref="uvfr__state__engine_8h" startline="224">uv_task_info::task_period</references>
        <references refid="group__state__engine__api_1ggaf11e8677926913f2dd803fabbed3455ca0e75e398c2bbcb663eaeb98684ca69d6" compoundref="uvfr__state__engine_8h" startline="98">UV_KILL_CMD</references>
        <references refid="group__state__engine__api_1ggaf11e8677926913f2dd803fabbed3455ca5f389a67f2a45fe1f51492b3b8f04077" compoundref="uvfr__state__engine_8h" startline="99">UV_SUSPEND_CMD</references>
        <referencedby refid="driving__loop_8c_1af580185fb5bb1cfba30ee1709d90628c" compoundref="driving__loop_8c" startline="42" endline="85">initDrivingLoop</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>File containing the meat and potatoes driving loop thread, and all supporting functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_8h" kindref="compound">main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="uvfr__utils_8h" kindref="compound">uvfr_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="can_8h" kindref="compound">can.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="motor__controller_8h" kindref="compound">motor_controller.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;FreeRTOS.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;task.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_8h" kindref="compound">main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cmsis_os.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>move<sp/>somewhere<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="driving__loop_8h" kindref="compound">driving_loop.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//External<sp/>Variables:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="driving__loop_8c_1a549b3590f54dfc129d2eebf2604c16e8" kindref="member">adc1_APPS1</ref>;<sp/></highlight><highlight class="comment">//These<sp/>are<sp/>the<sp/>locations<sp/>for<sp/>the<sp/>sensor<sp/>inputs<sp/>for<sp/>APPS<sp/>and<sp/>BPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="driving__loop_8c_1a8567d6e2f5ad8bd53f71ecc2b2b0ae30" kindref="member">adc1_APPS2</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="driving__loop_8c_1ad36d3aa4037203058df6816d56f4c186" kindref="member">adc1_BPS1</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="driving__loop_8c_1a277f7921a7a1e0fb8a6f953943dc06dc" kindref="member">adc1_BPS2</ref>;<sp/></highlight><highlight class="comment">//<sp/>Brake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="uvfr__settings_8c_1a44daa1a9c68be860616e7bc627d9b8f4" refkind="member"><highlight class="normal"><ref refid="structdriving__loop__args" kindref="compound">driving_loop_args</ref><sp/><ref refid="driving__loop_8c_1ab8788a0f246816c11002008cb43d1886" kindref="member">default_dl_settings</ref>;</highlight><highlight class="comment">//TODO<sp/>DECIDE<sp/>WHAT<sp/>YOU<sp/>WANT<sp/>DEFAULT<sp/>SETTINGS<sp/>TO<sp/>BE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="driving__loop_8c_1a401dd8422f51d8d344e5ac9559ef8908" refkind="member"><highlight class="normal"><ref refid="structdriving__loop__args" kindref="compound">driving_loop_args</ref>*<sp/><ref refid="driving__loop_8c_1a401dd8422f51d8d344e5ac9559ef8908" kindref="member">driving_args</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="driving__loop_8c_1a15e200c9bf4f5d49b02215e273d2d841" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="driving__loop_8c_1a15e200c9bf4f5d49b02215e273d2d841" kindref="member">is_accelerating</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35" refid="driving__loop_8c_1afb126e9ab9acbc2c02585ce5728a538a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="driving__loop_8c_1afb126e9ab9acbc2c02585ce5728a538a" kindref="member">T_PREV</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="36" refid="driving__loop_8c_1a8096732d061a4d6d6a9b78780025f056" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="driving__loop_8c_1a8096732d061a4d6d6a9b78780025f056" kindref="member">T_REQ</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="driving__loop_8c_1ad5227d6e3a1f9c241f31f07abe9f1695" kindref="member">calculateThrottlePercentage</ref>(uint16_t<sp/>apps1,<sp/>uint16_t<sp/>apps2);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="driving__loop_8c_1ac9c776513f26edd5cf75280eea26275b" kindref="member">performSafetyChecks</ref>(<ref refid="structdriving__loop__args" kindref="compound">driving_loop_args</ref>*<sp/>dl_params,<sp/>uint16_t<sp/>apps1_value,uint16_t<sp/>apps2_value,<sp/>uint16_t<sp/>bps1_value,<sp/>uint16_t<sp/>bps2_value,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="driving__loop_8h_1adef4571b048b5b1f2b712713741296c7" kindref="member">DL_internal_state</ref>*<sp/>dl_status);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="driving__loop_8c_1af580185fb5bb1cfba30ee1709d90628c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9e" kindref="member">uv_status_t</ref><sp/><ref refid="driving__loop_8c_1af580185fb5bb1cfba30ee1709d90628c" kindref="member">initDrivingLoop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*argument){</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daq_8h_1a56ca1193de01115c27ceb3768994017f" kindref="member">associateDaqParamWithVar</ref>(<ref refid="daq_8h_1a5249d5d3ad44df9d4479b814028469a9a4aa469f8ff609f64a67cb8f94bbae331" kindref="member">APPS1_ADC_VAL</ref>,<sp/>&amp;<ref refid="driving__loop_8c_1a549b3590f54dfc129d2eebf2604c16e8" kindref="member">adc1_APPS1</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daq_8h_1a56ca1193de01115c27ceb3768994017f" kindref="member">associateDaqParamWithVar</ref>(<ref refid="daq_8h_1a5249d5d3ad44df9d4479b814028469a9a649cfa800751dbfadfee50fbb49f8a0c" kindref="member">APPS2_ADC_VAL</ref>,<sp/>&amp;<ref refid="driving__loop_8c_1a8567d6e2f5ad8bd53f71ecc2b2b0ae30" kindref="member">adc1_APPS2</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daq_8h_1a56ca1193de01115c27ceb3768994017f" kindref="member">associateDaqParamWithVar</ref>(<ref refid="daq_8h_1a5249d5d3ad44df9d4479b814028469a9a217d6550cdad0d3eaff0189d269d8929" kindref="member">BPS1_ADC_VAL</ref>,<sp/>&amp;<ref refid="driving__loop_8c_1ad36d3aa4037203058df6816d56f4c186" kindref="member">adc1_BPS1</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daq_8h_1a56ca1193de01115c27ceb3768994017f" kindref="member">associateDaqParamWithVar</ref>(<ref refid="daq_8h_1a5249d5d3ad44df9d4479b814028469a9a75e438f4c4f3e2113352eb85475f8fa7" kindref="member">BPS2_ADC_VAL</ref>,<sp/>&amp;<ref refid="driving__loop_8c_1a277f7921a7a1e0fb8a6f953943dc06dc" kindref="member">adc1_BPS2</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structuv__task__info" kindref="compound">uv_task_info</ref>*<sp/>dl_task<sp/>=<sp/><ref refid="group__state__engine__api_1ga99bfc92472cdc99e9005e9d3c792909a" kindref="member">uvCreateTask</ref>();<sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>memory<sp/>for<sp/>the<sp/>task</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dl_task<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Oh<sp/>dear<sp/>lawd<sp/>if<sp/>allocation<sp/>fails<sp/>return<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea480ef4e56d17703f0629bfe1e06bc4f0" kindref="member">UV_ERROR</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="driving__loop_8c_1a401dd8422f51d8d344e5ac9559ef8908" kindref="member">driving_args</ref><sp/>=<sp/><ref refid="uvfr__settings_8h_1a03566822d1b8893362970a459bd67daf" kindref="member">current_vehicle_settings</ref>-&gt;<ref refid="structuv__vehicle__settings_1a7a5207ef389290242764f49c6c48a5ad" kindref="member">driving_loop_settings</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DO<sp/>NOT<sp/>TOUCH<sp/>ANY<sp/>OF<sp/>THE<sp/>FIELDS<sp/>WE<sp/>HAVENT<sp/>ALREADY<sp/>MENTIONED<sp/>HERE.<sp/>FOR<sp/>THE<sp/>LOVE<sp/>OF<sp/>GOD.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//dl_task-&gt;task_name<sp/>=<sp/>malloc(16*sizeof(char));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(dl_task-&gt;task_name<sp/>==<sp/>NULL){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>UV_ERROR;<sp/>//failed<sp/>to<sp/>malloc<sp/>the<sp/>name<sp/>of<sp/>the<sp/>thing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>dl_task-&gt;<ref refid="structuv__task__info_1ad24b438130bb3098ee5e855222dff21d" kindref="member">task_name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Driving_Loop&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>assign<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>dl_task-&gt;<ref refid="structuv__task__info_1afcd240d2b6b01b4acea600ef4dfe8fbc" kindref="member">task_function</ref><sp/>=<sp/><ref refid="driving__loop_8c_1a80cc48f06202edc29bcad26a956bcc98" kindref="member">StartDrivingLoop</ref>;<sp/></highlight><highlight class="comment">//<sp/>defining<sp/>the<sp/>function<sp/>the<sp/>task<sp/>will<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>dl_task-&gt;<ref refid="structuv__task__info_1aff45751f7189980589d55379d1d5a355" kindref="member">task_priority</ref><sp/>=<sp/>osPriorityHigh;<sp/></highlight><highlight class="comment">//<sp/>assigns<sp/>a<sp/>high<sp/>priority<sp/>in<sp/>FreeRTOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>dl_task-&gt;<ref refid="structuv__task__info_1a353ec6bf2c42ab0920f3d1e671e568a3" kindref="member">stack_size</ref><sp/>=<sp/>256;<sp/></highlight><highlight class="comment">//<sp/>memory<sp/>allocation<sp/>for<sp/>task<sp/>execution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>dl_task-&gt;<ref refid="structuv__task__info_1ab24dea3bde4de2d839bf15e65c2df0d6" kindref="member">active_states</ref><sp/>=<sp/><ref refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4aa4f9f0d81d66079ab97ea3abc3808969" kindref="member">UV_DRIVING</ref>;<sp/></highlight><highlight class="comment">//<sp/>Specifies<sp/>when<sp/>the<sp/>task<sp/>should<sp/>be<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>dl_task-&gt;<ref refid="structuv__task__info_1aafd4e2d916f50b54b99fd02d63831e43" kindref="member">suspension_states</ref><sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>dl_task-&gt;<ref refid="structuv__task__info_1a6986d7216c7f889164931b37ab752c29" kindref="member">deletion_states</ref><sp/>=<sp/><ref refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a5e3e7ecab0a58b320912cb4129641579" kindref="member">UV_INIT</ref>|<ref refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a9ec1eef180c6208b25b08f0526dc5eb8" kindref="member">UV_READY</ref><sp/>|<sp/><ref refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4abed5371c079ef927fb67d8bb8e8aa286" kindref="member">PROGRAMMING</ref><sp/>|<sp/><ref refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4abfddf18c580c465bb3c27b522aa4e4a9" kindref="member">UV_SUSPENDED</ref><sp/>|<sp/><ref refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4a7ff39f8abdc9adbfd693e412e4aaeb6e" kindref="member">UV_LAUNCH_CONTROL</ref><sp/>|<sp/><ref refid="group__state__engine__api_1gga259abff5a03eaf908dc8f03d99f478e4ac1fcacc095b8c0f1c9f452d51815bcb5" kindref="member">UV_ERROR_STATE</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>dl_task-&gt;<ref refid="structuv__task__info_1ad157811debce6672bb6d00da7e90b6ca" kindref="member">task_period</ref><sp/>=<sp/>100;<sp/></highlight><highlight class="comment">//runs<sp/>every<sp/>100ms<sp/>or<sp/>0.1<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>dl_task-&gt;<ref refid="structuv__task__info_1ae255dff9b38fc8c0754085060e8ae699" kindref="member">task_args</ref><sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//TODO:<sp/>Add<sp/>actual<sp/>settings<sp/>dipshit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="uvfr__utils_8h_1a71c52c44be11d0980910401cb9b5fb9ea93b7493f003cb72e7b6138f2794b58e9" kindref="member">UV_OK</ref>;<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="driving__loop_8c_1a14bdb2b38c226aa850a0c25207afd1fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="driving__loop_8c_1a14bdb2b38c226aa850a0c25207afd1fa" kindref="member">mapThrottleToTorque</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>throttle_percent)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>T_prev<sp/>=<sp/>0.0f;<sp/></highlight><highlight class="comment">//<sp/>Stores<sp/>the<sp/>last<sp/>filtered<sp/>torque<sp/>value.<sp/>for<sp/>filterting<sp/>to<sp/>check<sp/>if<sp/>decelearting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//float<sp/>throttle_percent<sp/>=<sp/>calculateThrottlePercentage(apps1,<sp/>apps2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(throttle_percent<sp/>==<sp/>0.0f){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0f;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T_MAX<sp/>=<sp/><ref refid="driving__loop_8c_1a401dd8422f51d8d344e5ac9559ef8908" kindref="member">driving_args</ref>-&gt;<ref refid="structdriving__loop__args_1aa02edefb5d12e375c67b0dede9f3d980" kindref="member">absolute_max_motor_torque</ref>;<sp/></highlight><highlight class="comment">//<sp/>got<sp/>this<sp/>from<sp/>driving_loop.h<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>torque_request_current<sp/>=<sp/><sp/>(throttle_percent<sp/>/<sp/>100.0f)<sp/>*<sp/>T_MAX;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>torque_request<sp/>=<sp/>T_prev;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_prev<sp/>=<sp/>torque_request_current;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torque_request;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="driving__loop_8c_1a3fa2d9e8a3ff5bc7ac576fda26265b44" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ACCELERATION<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="driving__loop_8c_1a7c627c95d1731c3c24a41b8aa86a5fd5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AUTOCROSS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="driving__loop_8c_1a64a87e1f80735e94aac871db572dda97" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENDURANCE<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="driving__loop_8c_1abdfd52d179ac8c6707ea8e0ddb98b7cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="driving__loop_8c_1abdfd52d179ac8c6707ea8e0ddb98b7cd" kindref="member">getKValue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>raceMode)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kVal<sp/>=<sp/>0.3;<sp/></highlight><highlight class="comment">//Default<sp/>for<sp/>if<sp/>racemode<sp/>Does<sp/>not<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(raceMode<sp/>==<sp/><ref refid="driving__loop_8c_1a3fa2d9e8a3ff5bc7ac576fda26265b44" kindref="member">ACCELERATION</ref>)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kVal<sp/>=<sp/>0.7;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(raceMode<sp/>==<sp/><ref refid="driving__loop_8c_1a7c627c95d1731c3c24a41b8aa86a5fd5" kindref="member">AUTOCROSS</ref>){</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kVal<sp/>=<sp/>0.4;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(raceMode<sp/>==<sp/><ref refid="driving__loop_8c_1a64a87e1f80735e94aac871db572dda97" kindref="member">ENDURANCE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kVal<sp/>=<sp/>0.2;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kVal;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="driving__loop_8c_1ad5227d6e3a1f9c241f31f07abe9f1695" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="driving__loop_8c_1ad5227d6e3a1f9c241f31f07abe9f1695" kindref="member">calculateThrottlePercentage</ref>(uint16_t<sp/>apps1,<sp/>uint16_t<sp/>apps2)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>both<sp/>sensor<sp/>values<sp/>are<sp/>within<sp/>the<sp/>valid<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(apps1<sp/>&lt;<sp/>driving_args-&gt;min_apps1_value<sp/>||<sp/>apps1<sp/>&gt;<sp/><ref refid="driving__loop_8c_1a401dd8422f51d8d344e5ac9559ef8908" kindref="member">driving_args</ref>-&gt;<ref refid="structdriving__loop__args_1a5de5af253c2b8fb31fcfed6e639e7ebf" kindref="member">max_apps1_value</ref><sp/>||<sp/>apps2<sp/>&lt;<sp/>driving_args-&gt;min_apps2_value<sp/>||<sp/>apps2<sp/>&gt;<sp/><ref refid="driving__loop_8c_1a401dd8422f51d8d344e5ac9559ef8908" kindref="member">driving_args</ref>-&gt;<ref refid="structdriving__loop__args_1ab6ea518520efa72bf81353dc0efdf15e" kindref="member">max_apps2_value</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0f;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>throttle<sp/>percentage<sp/>using<sp/>linear<sp/>interpolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>throttle_percent<sp/>=<sp/>((float)(apps1<sp/>-<sp/><ref refid="driving__loop_8c_1a401dd8422f51d8d344e5ac9559ef8908" kindref="member">driving_args</ref>-&gt;<ref refid="structdriving__loop__args_1a1b5e703a1791d3321357cf65ce4832ce" kindref="member">min_apps1_value</ref>)<sp/>/<sp/>(<ref refid="driving__loop_8c_1a401dd8422f51d8d344e5ac9559ef8908" kindref="member">driving_args</ref>-&gt;<ref refid="structdriving__loop__args_1a5de5af253c2b8fb31fcfed6e639e7ebf" kindref="member">max_apps1_value</ref><sp/>-<sp/><ref refid="driving__loop_8c_1a401dd8422f51d8d344e5ac9559ef8908" kindref="member">driving_args</ref>-&gt;<ref refid="structdriving__loop__args_1a1b5e703a1791d3321357cf65ce4832ce" kindref="member">min_apps1_value</ref>))<sp/>*<sp/>100.0f;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SAFETY<sp/>CHECK:<sp/>Verify<sp/>APPS1<sp/>and<sp/>APPS2<sp/>values<sp/>are<sp/>within<sp/>10%<sp/>of<sp/>each<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>apps_diff<sp/>=<sp/>fabs((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)apps1<sp/>-<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)apps2)<sp/>/<sp/>(float)apps1;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(apps_diff<sp/>&gt;<sp/>0.1f)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sensors<sp/>are<sp/>out<sp/>of<sp/>sync,<sp/>return<sp/>0%<sp/>to<sp/>prevent<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;WARNING:<sp/>APPS<sp/>sensors<sp/>out<sp/>of<sp/>sync!<sp/>Returning<sp/>0%%<sp/>throttle.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(</highlight><highlight class="stringliteral">&quot;idek&quot;</highlight><highlight class="normal">,0);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0f;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//else<sp/>if<sp/>(apps_diff<sp/>&lt;=<sp/>0.1f){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>function<sp/>call<sp/>calcThrottlePercentage(param)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//*<sp/>OR<sp/>return<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>throttle_percent;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="driving__loop_8c_1a42c4321a28da09906e185c9c5971fce9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="driving__loop_8c_1a42c4321a28da09906e185c9c5971fce9" kindref="member">applyTorqueFilter</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>T_req,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>T_prev,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_accelearting)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Filtering<sp/>formula:<sp/>T_filtered<sp/>=<sp/>T_prev<sp/>+<sp/>(T_req<sp/>-<sp/>T_prev)<sp/>*<sp/>k</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>T_prev<sp/>+<sp/>(T_req<sp/>-<sp/>T_prev)<sp/>*<sp/>FILTER_K;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>except<sp/>hehehehhe<sp/>were<sp/>gonna<sp/>create<sp/>a<sp/>get_k<sp/>function<sp/>based<sp/>on<sp/>race<sp/>modes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>FILTER_K<sp/>=<sp/><ref refid="driving__loop_8c_1abdfd52d179ac8c6707ea8e0ddb98b7cd" kindref="member">getKValue</ref>(0);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="driving__loop_8c_1a15e200c9bf4f5d49b02215e273d2d841" kindref="member">is_accelerating</ref>)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILTER_K<sp/>=<sp/>0.4;<sp/></highlight><highlight class="comment">//<sp/>smooth<sp/>acceleration<sp/>(adjustable<sp/>for<sp/>endurance<sp/>vs<sp/>sport<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILTER_K<sp/>=<sp/>1.0;<sp/></highlight><highlight class="comment">//<sp/>INSTANT<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>filtered<sp/>torque</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>T_filtered<sp/>=<sp/><sp/>T_prev<sp/>+<sp/>(T_req<sp/>-<sp/>T_prev)<sp/>*<sp/>FILTER_K;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensures<sp/>we<sp/>do<sp/>not<sp/>hold<sp/>residual<sp/>torque<sp/>when<sp/>stopping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(T_req<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_filtered<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>If<sp/>stopping,<sp/>is<sp/>requested<sp/>torque</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T_filtered;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>tnext<sp/>&gt;<sp/>treq<sp/>{tnext<sp/>=<sp/>treq}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//send<sp/>value<sp/>to<sp/>sent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="driving__loop_8c_1a1eee9dfaef3aaaf010bd8bb12fa20fc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="driving__loop_8c_1a1eee9dfaef3aaaf010bd8bb12fa20fc3" kindref="member">sendTorqueToMotorController</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>T_filtered)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Placeholder<sp/>function<sp/>to<sp/>send<sp/>torque<sp/>command<sp/>to<sp/>motor<sp/>controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="motor__controller_8h_1ad9944bce211ed6594929c3acf72e3881" kindref="member">MotorControllerSpinTest</ref>(T_filtered);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="driving__loop_8c_1a80cc48f06202edc29bcad26a956bcc98" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="driving__loop_8c_1a80cc48f06202edc29bcad26a956bcc98" kindref="member">StartDrivingLoop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>argument){</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Initialize<sp/>driving<sp/>loop<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//extracting<sp/>task<sp/>arguments,<sp/>and<sp/>gets<sp/>parameters<sp/>like<sp/>min/max<sp/>allowed<sp/>values<sp/>for<sp/>the<sp/>APPS<sp/>and<sp/>BPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structuv__task__info" kindref="compound">uv_task_info</ref>*<sp/>params<sp/>=<sp/>(<ref refid="structuv__task__info" kindref="compound">uv_task_info</ref>*)<sp/>argument;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/>uint16_t<sp/>min_apps_value;</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/>uint16_t<sp/>max_apps_value;</highlight></codeline>
<codeline lineno="207"><highlight class="comment"></highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/>uint16_t<sp/>min_apps_offset;</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/>uint16_t<sp/>max_apps_offset;</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="driving__loop_8h_1adef4571b048b5b1f2b712713741296c7" kindref="member">DL_internal_state</ref><sp/>dl_status<sp/>=<sp/><ref refid="driving__loop_8h_1adef4571b048b5b1f2b712713741296c7a51000915ad3f7b4a5874322723d879ca" kindref="member">Plausible</ref>;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>issues<sp/>are<sp/>detected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdriving__loop__args" kindref="compound">driving_loop_args</ref>*<sp/>dl_params<sp/>=<sp/>(<ref refid="structdriving__loop__args" kindref="compound">driving_loop_args</ref>*)<sp/>params-&gt;<ref refid="structuv__task__info_1ae255dff9b38fc8c0754085060e8ae699" kindref="member">task_args</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/><sp/>min_apps_value<sp/>=<sp/>dl_params-&gt;min_apps_value;</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/>max_apps_value<sp/>=<sp/>dl_params-&gt;max_apps_value;</highlight></codeline>
<codeline lineno="222"><highlight class="comment"></highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/>min_apps_offset<sp/>=<sp/>dl_params-&gt;min_apps_offset;<sp/>//minimum<sp/>APPS<sp/>offset</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/>max_apps_offset<sp/>=<sp/>dl_params-&gt;max_apps_offset;</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>TickType_t<sp/>tick_period<sp/>=<sp/>pdMS_TO_TICKS(params-&gt;<ref refid="structuv__task__info_1ad157811debce6672bb6d00da7e90b6ca" kindref="member">task_period</ref>);<sp/></highlight><highlight class="comment">//Convert<sp/>ms<sp/>of<sp/>period<sp/>to<sp/>the<sp/>RTOS<sp/>ticks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>TickType_t<sp/>last_time<sp/>=<sp/>xTaskGetTickCount();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;){<sp/></highlight><highlight class="comment">//<sp/>enters<sp/>infinite<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(params-&gt;<ref refid="structuv__task__info_1af532b5031cd6a168a3ec45ab9ead4f23" kindref="member">cmd_data</ref><sp/>==<sp/><ref refid="group__state__engine__api_1ggaf11e8677926913f2dd803fabbed3455ca0e75e398c2bbcb663eaeb98684ca69d6" kindref="member">UV_KILL_CMD</ref>){<sp/></highlight><highlight class="comment">//<sp/>to<sp/>perform<sp/>task<sp/>control<sp/>(suspend/kill)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__state__engine__backend_1ga5f35b34432afed7f18f91fb8607f096f" kindref="member">killSelf</ref>(params);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(params-&gt;<ref refid="structuv__task__info_1af532b5031cd6a168a3ec45ab9ead4f23" kindref="member">cmd_data</ref><sp/>==<sp/><ref refid="group__state__engine__api_1ggaf11e8677926913f2dd803fabbed3455ca5f389a67f2a45fe1f51492b3b8f04077" kindref="member">UV_SUSPEND_CMD</ref>){</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__state__engine__backend_1gad6117850b55ad52be51d93915bcc313c" kindref="member">suspendSelf</ref>(params);<sp/></highlight><highlight class="comment">//<sp/>if<sp/>_UV_SUSPEND_CMD<sp/>received<sp/>pause<sp/>the<sp/>task</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelayUntil(<sp/>&amp;last_time,<sp/>tick_period);<sp/></highlight><highlight class="comment">//Me<sp/>and<sp/>the<sp/>boys<sp/>on<sp/>our<sp/>way<sp/>to<sp/>wait<sp/>for<sp/>a<sp/>set<sp/>period<sp/>every<sp/>100ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_GPIO_TogglePin(GPIOD,<sp/>GPIO_PIN_14);<sp/></highlight><highlight class="comment">//Blink<sp/>and<sp/>LED<sp/>(for<sp/>debugging)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Read<sp/>stuff<sp/>from<sp/>the<sp/>addresses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Copy<sp/>the<sp/>values<sp/>over<sp/>into<sp/>new<sp/>local<sp/>variables,<sp/>in<sp/>order<sp/>to<sp/>avoid<sp/>messing<sp/>up<sp/>the<sp/>APPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>apps1_value<sp/>=<sp/><ref refid="driving__loop_8c_1a549b3590f54dfc129d2eebf2604c16e8" kindref="member">adc1_APPS1</ref>;<sp/></highlight><highlight class="comment">//<sp/>reading<sp/>sensor<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>apps2_value<sp/>=<sp/><ref refid="driving__loop_8c_1a8567d6e2f5ad8bd53f71ecc2b2b0ae30" kindref="member">adc1_APPS2</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>bps1_value<sp/>=<sp/><ref refid="driving__loop_8c_1ad36d3aa4037203058df6816d56f4c186" kindref="member">adc1_BPS1</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>bps2_value<sp/>=<sp/><ref refid="driving__loop_8c_1a277f7921a7a1e0fb8a6f953943dc06dc" kindref="member">adc1_BPS2</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SAFETY<sp/>CHECKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rachan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>APPS1/APPS2<sp/>CHECK<sp/>(Throttle<sp/>Position<sp/>Sensors)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NEW<sp/>function<sp/>for<sp/>safety<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>safe<sp/>=<sp/><ref refid="driving__loop_8c_1ac9c776513f26edd5cf75280eea26275b" kindref="member">performSafetyChecks</ref>(dl_params,<sp/>apps1_value,<sp/>apps2_value,<sp/>bps1_value,<sp/>bps2_value,<sp/>&amp;dl_status);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!safe)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>safety<sp/>check<sp/>fails,<sp/>handle<sp/>error<sp/>(stop?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dl_status<sp/>==<sp/><ref refid="driving__loop_8h_1adef4571b048b5b1f2b712713741296c7a51000915ad3f7b4a5874322723d879ca" kindref="member">Plausible</ref>){</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>This.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//implement<sp/>motor<sp/>control<sp/>logic<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dont<sp/>have<sp/>to<sp/>start<sp/>as<sp/>an<sp/>if<sp/>statement<sp/>just<sp/>idea</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>**Determine<sp/>if<sp/>accelerating<sp/>or<sp/>decelerating**</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="driving__loop_8c_1a15e200c9bf4f5d49b02215e273d2d841" kindref="member">is_accelerating</ref><sp/>=<sp/>(<ref refid="driving__loop_8c_1a8096732d061a4d6d6a9b78780025f056" kindref="member">T_REQ</ref><sp/>&gt;=<sp/><ref refid="driving__loop_8c_1afb126e9ab9acbc2c02585ce5728a538a" kindref="member">T_PREV</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>vehicle<sp/>state<sp/>is<sp/>equal<sp/>to<sp/>drivibg<sp/>and<sp/>only<sp/>oif<sp/>its<sp/>equal<sp/>to<sp/>dribvibng</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>avoid<sp/>edge<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Command<sp/>the<sp/>motor<sp/>controller<sp/>to<sp/>do<sp/>the<sp/>thing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(1){</highlight><highlight class="comment">//if(1)<sp/>reminds<sp/>me<sp/>that<sp/>there<sp/>should<sp/>be<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DL_end:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>loose<sp/>the<sp/>ADC,<sp/>and<sp/>have<sp/>it<sp/>DMA<sp/>the<sp/>result<sp/>into<sp/>the<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>until<sp/>next<sp/>D.L.<sp/>occurance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//osDelay(DEFAULT_PERIOD);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>**<sp/>Throttle<sp/>(APPS)<sp/>Checks**</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(apps1_value<sp/>&lt;<sp/>dl_params-&gt;min_apps_value){</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//APPS1<sp/>is<sp/>probably<sp/>unplugged.<sp/>Act<sp/>accordingly</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;<sp/>//<sp/>stop</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else<sp/>if(apps1_value<sp/>&gt;<sp/>dl_params-&gt;max_apps_value){</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//indicative<sp/>of<sp/>APPS1<sp/>short<sp/>(APPS1<sp/>short<sp/>circuit<sp/>detected)</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//goto<sp/>DL_end;</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="comment"></highlight></codeline>
<codeline lineno="354"><highlight class="comment"></highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(apps2_value<sp/>&lt;<sp/>dl_params-&gt;max_apps_value){</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//APPS2<sp/>is<sp/>probably<sp/>unplugged.<sp/>Act<sp/>accordingly.</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else<sp/>if(apps2_value<sp/>&gt;<sp/>dl_params-&gt;max_apps_value){</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//indicative<sp/>of<sp/>APPS2<sp/>short<sp/>circuit<sp/>detected</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="comment"></highlight></codeline>
<codeline lineno="363"><highlight class="comment"></highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>**<sp/>Check<sp/>APPS<sp/>sensor<sp/>synchronization</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//uint16_t<sp/>apps_diff<sp/>=<sp/>apps1_value<sp/>-<sp/>apps2_value;</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>apps_diff<sp/>=<sp/>(apps1_value<sp/>&gt;<sp/>apps2_value)</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(apps1_value<sp/>-<sp/>apps2_value)<sp/><sp/><sp/>//<sp/>IF<sp/>apps1<sp/>&gt;<sp/>apps2,<sp/>do<sp/>apps1<sp/>-apps2</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(apps2_value<sp/>-<sp/>apps1_value);<sp/>//<sp/>IF<sp/>apps2<sp/>&gt;<sp/>apps1,<sp/>do<sp/>apps2<sp/>-<sp/>apps1</highlight></codeline>
<codeline lineno="369"><highlight class="comment"></highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if((apps_diff<sp/>&gt;<sp/>dl_params-&gt;max_apps_offset)||(apps_diff<sp/>&lt;<sp/>dl_params-&gt;min_apps_offset)){</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//APPS1<sp/>and<sp/>APPS2<sp/>are<sp/>no<sp/>longer<sp/>in<sp/>sync<sp/>with<sp/>each<sp/>other</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="comment"></highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>BPS1/BPS2<sp/>Check<sp/>(Brake<sp/>Pressure<sp/>Sensors)</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/>**<sp/>Throttle<sp/>(BPS)<sp/>Checks**</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(bps1_value<sp/>&lt;<sp/>dl_params-&gt;min_BPS_value){</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Possible<sp/>BPS1<sp/>disconnection</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else<sp/>if(bps1_value<sp/>&gt;<sp/>dl_params-&gt;max_BPS_value){</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Possible<sp/>BPS1<sp/>short<sp/>circuit</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="comment"></highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Repeat<sp/>these<sp/>safety<sp/>checks<sp/>for<sp/>BPS<sp/>2.</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(bps2_value<sp/>&lt;<sp/>dl_params-&gt;min_BPS_value){</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="388"><highlight class="comment"></highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else<sp/>if(bps2_value<sp/>&gt;<sp/>dl_params-&gt;max_BPS_value){</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="391"><highlight class="comment"></highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="comment"></highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Brake<sp/>Plausibility<sp/>Check</highlight></codeline>
<codeline lineno="395"><highlight class="comment"></highlight></codeline>
<codeline lineno="452" refid="driving__loop_8c_1ac9c776513f26edd5cf75280eea26275b" refkind="member"><highlight class="comment">bool<sp/>performSafetyChecks(driving_loop_args*<sp/>dl_params,<sp/>uint16_t<sp/>apps1_value,uint16_t<sp/>apps2_value,<sp/>uint16_t<sp/>bps1_value,<sp/>uint16_t<sp/>bps2_value,<sp/>enum<sp/>DL_internal_state*<sp/>dl_status)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="comment">//Perform<sp/>input<sp/>validation<sp/>and<sp/>ensures<sp/>values<sp/>are<sp/>within<sp/>the<sp/>expected<sp/>range</highlight></codeline>
<codeline lineno="454"><highlight class="comment"></highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Convert<sp/>APPS<sp/>values<sp/>to<sp/>a<sp/>0-1<sp/>float<sp/>scale</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>This<sp/>helps<sp/>us<sp/>in<sp/>calculating<sp/>the<sp/>percentage<sp/>difference<sp/>between<sp/>the<sp/>two<sp/>throttle<sp/>sensors</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>can<sp/>do<sp/>this<sp/>as<sp/>a<sp/>function<sp/>call</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/><sp/><sp/><sp/>float<sp/>apps1_ratio<sp/>=<sp/>((float)(apps1_value<sp/>-<sp/>dl_params-&gt;min_apps1_value)/(dl_params-&gt;max_apps1_value<sp/>-<sp/>dl_params-&gt;min_apps1_value));</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/><sp/><sp/><sp/>float<sp/>apps2_ratio<sp/>=<sp/>((float)(apps2_value<sp/>-<sp/>dl_params-&gt;min_apps2_value)/(dl_params-&gt;max_apps2_value<sp/>-<sp/>dl_params-&gt;min_apps2_value));</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/><sp/><sp/><sp/>float<sp/>throttle_percent<sp/>=<sp/>calculateThrottlePercentage(apps1_value,<sp/>apps2_value);</highlight></codeline>
<codeline lineno="461"><highlight class="comment"></highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Convert<sp/>BPS<sp/>values<sp/>to<sp/>a<sp/>0-1<sp/>float<sp/>scale</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/><sp/><sp/><sp/>float<sp/>bps1_ratio<sp/>=<sp/>((float)(bps1_value<sp/>-<sp/>dl_params-&gt;min_BPS_value)<sp/>/<sp/>(dl_params-&gt;max_BPS_value<sp/>-<sp/>dl_params-&gt;min_BPS_value));</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/><sp/><sp/><sp/>float<sp/>bps2_ratio<sp/>=<sp/>((float)(bps2_value<sp/>-<sp/>dl_params-&gt;min_BPS_value)<sp/>/<sp/>(dl_params-&gt;max_BPS_value<sp/>-<sp/>dl_params-&gt;min_BPS_value));</highlight></codeline>
<codeline lineno="465"><highlight class="comment"></highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Compute<sp/>percentage<sp/>differences<sp/>since<sp/>2<sp/>different<sp/>spots</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/><sp/>float<sp/>apps_percentage_diff<sp/>=<sp/>fabs(apps1_ratio<sp/>-<sp/>apps2_ratio)<sp/>*<sp/>100.0f;<sp/>//<sp/>APP1<sp/>and<sp/>APP2</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/><sp/><sp/><sp/>float<sp/>bps_percentage_diff<sp/>=<sp/>fabs(bps1_ratio<sp/>-<sp/>bps2_ratio)<sp/>*<sp/>100.0f;<sp/>//<sp/>BPS1<sp/>and<sp/>BPS2</highlight></codeline>
<codeline lineno="469"><highlight class="comment"></highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Debugging<sp/>Log<sp/>Sensor<sp/>Values</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/><sp/><sp/><sp/>//printf(&quot;APPS1:<sp/>%f,<sp/>APPS2:<sp/>%f,<sp/>Diff:<sp/>%f\n&quot;,<sp/>apps1_ratio,<sp/>apps2_ratio,<sp/>apps_percentage_diff);</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/><sp/><sp/><sp/>//printf(&quot;BPS1:<sp/>%.2f,<sp/>BPS2:<sp/>%.2f,<sp/>Diff:<sp/>%.2f%%\n&quot;,<sp/>bps1_ratio,<sp/>bps2_ratio,<sp/>bps_percentage_diff);</highlight></codeline>
<codeline lineno="473"><highlight class="comment"></highlight></codeline>
<codeline lineno="474"><highlight class="comment"></highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Fatal<sp/>Errors<sp/>APPS<sp/>Sensors<sp/>are<sp/>out<sp/>of<sp/>Range<sp/>shut<sp/>down<sp/>motor</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(apps1_value<sp/>&lt;<sp/>dl_params-&gt;min_apps1_value<sp/>||<sp/>apps1_value<sp/>&gt;<sp/>dl_params-&gt;max_apps2_value){</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;ERROR:<sp/>APPS1:<sp/>out<sp/>of<sp/>range!<sp/>Stopping<sp/>motor.\n&quot;);</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//stop_commmand();</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//killself(params);</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;idek&quot;,0);</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(apps2_value<sp/>&lt;<sp/>dl_params-&gt;min_apps2_value<sp/>||<sp/>apps2_value<sp/>&gt;<sp/>dl_params-&gt;max_apps2_value)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;ERROR:<sp/>APPS2<sp/>out<sp/>of<sp/>range!<sp/>Stopping<sp/>motor.\n&quot;);</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//stop_command();</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//killSelf(params);<sp/>//<sp/>combination<sp/>of<sp/>these<sp/>two<sp/>can<sp/>be<sp/>replaced<sp/>with<sp/>UV_panic</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;idek&quot;,0);</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="comment"></highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Non-fatal<sp/>Errors<sp/>:<sp/>APPS<sp/>sensors<sp/>mismatch<sp/>greater<sp/>than<sp/>10%,<sp/>suspend<sp/>task,<sp/>stop<sp/>motor</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(apps_percentage_diff<sp/>&gt;<sp/>10.0f){</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//printf(&quot;WARNING:<sp/>APPS<sp/>sensors<sp/>out<sp/>of<sp/>sync<sp/>(%.2f%%)!<sp/>Suspending<sp/>task.<sp/>\n&quot;,<sp/>apps_percentage_diff);</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>output<sp/>0<sp/>as<sp/>in<sp/>no<sp/>torque<sp/>request</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>stop_command();</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//suspendSelf(params);</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;idek&quot;,0);</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="comment"></highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Fatal<sp/>Errors<sp/>BPS<sp/>sensor<sp/>our<sp/>of<sp/>range</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(bps1_value<sp/>&lt;<sp/>dl_params-&gt;min_BPS_value<sp/>||<sp/>bps1_value<sp/>&gt;<sp/>dl_params-&gt;max_BPS_value)<sp/>{<sp/>//<sp/>BPS1</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//printf(&quot;ERROR:<sp/>BPS1<sp/>out<sp/>of<sp/>range!<sp/>Stopping<sp/>motor.\n&quot;);</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//stop_command();</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//killself(params);</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;idek&quot;,0);</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="comment"></highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(bps2_value<sp/>&lt;<sp/>dl_params-&gt;min_BPS_value<sp/>||<sp/>bps2_value<sp/>&gt;<sp/>dl_params-&gt;max_BPS_value)<sp/>{<sp/>//<sp/>BPS1</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;ERROR:<sp/>BPS2<sp/>out<sp/>of<sp/>range!<sp/>Stopping<sp/>motor.\n&quot;);</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//stop_command();</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//killself(params);<sp/>//<sp/>uv_panic</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;idek&quot;,0);</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="comment"></highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Non<sp/>fatal<sp/>errors:<sp/>BPS<sp/>sensors<sp/>mismatch<sp/>greater<sp/>than<sp/>5%,<sp/>suspend<sp/>tasks,<sp/>stop<sp/>motor</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(bps_percentage_diff<sp/>&gt;<sp/>5.0f){</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//printf(&quot;WARNING:<sp/>BPS<sp/>sensors<sp/>are<sp/>out<sp/>of<sp/>sync<sp/>(%.2f%%)!<sp/>Suspending<sp/>task.\n&quot;,<sp/>bps_percentage_diff);</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>output<sp/>0<sp/>as<sp/>in<sp/>no<sp/><sp/>request</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//stop_command();</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//suspendSelf(params);</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uvPanic(&quot;idek&quot;,0);</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="comment"></highlight></codeline>
<codeline lineno="528"><highlight class="comment"></highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Brake<sp/>Plausibility<sp/>Check:<sp/>Prevent<sp/>simultaneous<sp/>throttle<sp/>and<sp/>brake</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>if<sp/>((bps1_value<sp/>&gt;<sp/>dl_params-&gt;bps_plausibility_check_threshold)<sp/>&amp;&amp;<sp/>(apps1_value<sp/>&gt;<sp/>dl_params-&gt;apps_plausibility_check_threshold))<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;WARNING:<sp/>Brake<sp/>and<sp/>accelerator<sp/>pressed<sp/>simultaneously!<sp/>Suspending<sp/>task.\n&quot;);</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//stop_command();<sp/>//<sp/>return<sp/>0</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dl_status<sp/>=<sp/>Implausible;</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//suspendSelf(params);</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="comment"></highlight></codeline>
<codeline lineno="538"><highlight class="comment"></highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>//<sp/>System<sp/>Recovery:<sp/>resume<sp/>motor<sp/>if<sp/>previously<sp/>in<sp/>implausible<sp/>state</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>if<sp/>(*dl_status<sp/>==<sp/>Implausible)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(1){<sp/>//NOTE<sp/>THE<sp/>RULE<sp/>ON<sp/>WHERE<sp/>THE<sp/>PEDAL<sp/>MUST<sp/>BE<sp/>FOR<sp/>THIS<sp/>TO<sp/>HAPPEN</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dl_status<sp/>=<sp/>Plausible;</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;INFO:<sp/>Safety<sp/>conditions<sp/>normal.<sp/>Motor<sp/>can<sp/>resume.\n&quot;);</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//spin_motor();<sp/>output<sp/>torque<sp/>request<sp/>to<sp/>motor_controller</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="comment"></highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;<sp/>//All<sp/>checks<sp/>passed,<sp/>motor<sp/>remains<sp/>active</highlight></codeline>
<codeline lineno="549"><highlight class="comment"></highlight></codeline>
<codeline lineno="550"><highlight class="comment"></highlight></codeline>
<codeline lineno="551"><highlight class="comment"></highlight></codeline>
<codeline lineno="552"><highlight class="comment"></highlight></codeline>
<codeline lineno="553"><highlight class="comment"></highlight></codeline>
<codeline lineno="554"><highlight class="comment">}</highlight></codeline>
<codeline lineno="555"><highlight class="comment"></highlight></codeline>
<codeline lineno="556"><highlight class="comment"></highlight></codeline>
    </programlisting>
    <location file="Core/Src/driving_loop.c"/>
  </compounddef>
</doxygen>
